/*
 * This file is part of yosql. It is subject to the license terms in the LICENSE file found in the top-level
 * directory of this distribution and at http://creativecommons.org/publicdomain/zero/1.0/. No part of yosql,
 * including this file, may be copied, modified, propagated, or distributed except according to the terms contained
 * in the LICENSE file.
 */

package wtf.metio.yosql.tooling.codegen.generator.dao.jdbc;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import wtf.metio.yosql.tooling.codegen.model.configuration.RuntimeConfiguration;
import wtf.metio.yosql.tooling.codegen.test.ObjectMother;
import wtf.metio.yosql.tooling.codegen.test.TestIterables;

@DisplayName("JdbcFieldsGenerator")
class JdbcFieldsGeneratorTest {

    private JdbcFieldsGenerator generator;

    @BeforeEach
    void setUp() {
        generator = new JdbcFieldsGenerator(
                ObjectMother.fields(),
                ObjectMother.loggingGenerator(),
                ObjectMother.jdbcFields(),
                ObjectMother.jdbcNames(),
                ObjectMother.javadoc(),
                RuntimeConfiguration.usingDefaults());
    }

    @Test
    void staticInitializer() {
        Assertions.assertEquals("""
                QUERY_TEST_INDEX.put("test", new int[] { 0 });
                """, generator.staticInitializer(ObjectMother.sqlStatements()).toString());
    }

    @Test
    void asFields() {
        TestIterables.assertIterable(generator.asFields(ObjectMother.sqlStatements()),
                """
                        @javax.annotation.processing.Generated(
                            value = "YoSQL",
                            comments = "DO NOT MODIFY - automatically generated by YoSQL"
                        )
                        private final javax.sql.DataSource dataSource;
                        """,
                """
                        @javax.annotation.processing.Generated(
                            value = "YoSQL",
                            comments = "DO NOT MODIFY - automatically generated by YoSQL"
                        )
                        private static final java.util.logging.Logger LOG = java.util.logging.Logger.getLogger(Test.class.getName());
                        """,
                """
                        /**
                         * Generated based on the following file:
                         * <ul>
                         * <li>/some/path/query.sql</li>
                         * </ul>
                         */
                        @javax.annotation.processing.Generated(
                            value = "YoSQL",
                            comments = "DO NOT MODIFY - automatically generated by YoSQL"
                        )
                        private static final java.lang.String QUERY_TEST_RAW = "SELECT raw FROM table;";
                        """,
                """
                        /**
                         * Generated based on the following file:
                         * <ul>
                         * <li>/some/path/query.sql</li>
                         * </ul>
                         */
                        @javax.annotation.processing.Generated(
                            value = "YoSQL",
                            comments = "DO NOT MODIFY - automatically generated by YoSQL"
                        )
                        private static final java.lang.String QUERY_TEST = "SELECT raw FROM table;";
                        """,
                """
                        @javax.annotation.processing.Generated(
                            value = "YoSQL",
                            comments = "DO NOT MODIFY - automatically generated by YoSQL"
                        )
                        private static final java.util.Map<java.lang.String, int[]> QUERY_TEST_INDEX = new java.util.HashMap<>(1);
                        """);
    }

}