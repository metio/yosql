<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://gohugo.io/" version="0.121.2">Hugo</generator><title type="html">Configuration on YoSQL</title><link href="https://yosql.projects.metio.wtf/categories/configuration/" rel="alternate" type="text/html" title="html"/><link href="https://yosql.projects.metio.wtf/categories/configuration/index.xml" rel="alternate" type="application/rss+xml" title="rss"/><link href="https://yosql.projects.metio.wtf/categories/configuration/atom.xml" rel="self" type="application/atom+xml" title="Atom"/><updated>2024-01-14T07:19:38+00:00</updated><id>https://yosql.projects.metio.wtf/categories/configuration/</id><entry><title type="html">action</title><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><link href="https://yosql.projects.metio.wtf/configuration/names/datasource/?utm_source=atom_feed" rel="related" type="text/html" title="dataSource"/><id>https://yosql.projects.metio.wtf/configuration/names/action/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of an action.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-action<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --action<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>action</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">action</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">action</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>action</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;action&gt;</span>configValue<span class="nt">&lt;/action&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">allowedCallPrefixes</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><id>https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Configures which name prefixes are allowed for statements that are calling stored procedures.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-call-execute-evaluate-eval">Option: &lsquo;call, execute, evaluate, eval&rsquo;</h3>
<p>The default value of the <code>allowedCallPrefixes</code> configuration option is <code>call, execute, evaluate, eval</code> to allow several commonly used names for calling procedures.</p>
<h3 id="option-do">Option: &lsquo;do&rsquo;</h3>
<p>Changing the <code>allowedCallPrefixes</code> configuration option to <code>do</code> only allows names with the prefix <code>do</code> to call stored procedures.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-allowed-call-prefixes<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --allowed-call-prefixes<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>allowedCallPrefixes</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowedCallPrefixes</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowedCallPrefixes</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>allowedCallPrefixes</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;allowedCallPrefixes&gt;</span>configValue<span class="nt">&lt;/allowedCallPrefixes&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">allowedReadPrefixes</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><id>https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Configures which name prefixes are allowed for statements that are reading data from your database.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-read-select-find-query-lookup-get">Option: &lsquo;read, select, find, query, lookup, get&rsquo;</h3>
<p>The default value of the <code>allowedReadPrefixes</code> configuration option is <code>read, select, find, query, lookup, get</code> to allow several commonly used names for reading statements.</p>
<h3 id="option-lego">Option: &rsquo;lego'</h3>
<p>Changing the <code>allowedReadPrefixes</code> configuration option to <code>lego</code> only allows names with the prefix <code>lego</code> to read data.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-allowed-read-prefixes<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --allowed-read-prefixes<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>allowedReadPrefixes</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowedReadPrefixes</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowedReadPrefixes</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>allowedReadPrefixes</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;allowedReadPrefixes&gt;</span>configValue<span class="nt">&lt;/allowedReadPrefixes&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">allowedWritePrefixes</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><id>https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Configures which name prefixes are allowed for statements that are writing data to your database.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-update-insert-delete-create-write-add-remove-merge-drop">Option: &lsquo;update, insert, delete, create, write, add, remove, merge, drop&rsquo;</h3>
<p>The default value of the <code>allowedWritePrefixes</code> configuration option is <code>update, insert, delete, create, write, add, remove, merge, drop</code> to allow several commonly used names for writing statements.</p>
<h3 id="option-scribo">Option: &lsquo;scribo&rsquo;</h3>
<p>Changing the <code>allowedWritePrefixes</code> configuration option to <code>scribo</code> only allows names with the prefix <code>scribo</code> to write data.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-allowed-write-prefixes<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --allowed-write-prefixes<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>allowedWritePrefixes</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowedWritePrefixes</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowedWritePrefixes</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>allowedWritePrefixes</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;allowedWritePrefixes&gt;</span>configValue<span class="nt">&lt;/allowedWritePrefixes&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">annotateClasses</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classmembers/?utm_source=atom_feed" rel="related" type="text/html" title="classMembers"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether Generated annotations should be added to the generated classes.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>The default value of the <code>annotateClasses</code> configuration option is <code>false</code>. Setting the option to <code>false</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-true">Option: &rsquo;true'</h3>
<p>Changing the <code>annotateClasses</code> configuration option to <code>true</code> adds the <code>@Generated</code> annotation to every generated classes. Its is possible to configure each value individually using other config options.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-annotate-classes<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotate-classes<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>annotateClasses</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">annotateClasses</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">annotateClasses</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>annotateClasses</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;annotateClasses&gt;</span>configValue<span class="nt">&lt;/annotateClasses&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/><category scheme="https://yosql.projects.metio.wtf/tags/classes" term="classes" label="classes"/></entry><entry><title type="html">annotateFields</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classmembers/?utm_source=atom_feed" rel="related" type="text/html" title="classMembers"/><id>https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether Generated annotations should be added to the generated fields.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>The default value of the <code>annotateFields</code> configuration option is <code>false</code>. Setting the option to <code>false</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-true">Option: &rsquo;true'</h3>
<p>Changing the <code>annotateFields</code> configuration option to <code>true</code> adds the <code>@Generated</code> annotation to every generated fields. Its is possible to configure each value individually using other config options.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-annotate-fields<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotate-fields<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>annotateFields</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">annotateFields</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">annotateFields</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>annotateFields</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;annotateFields&gt;</span>configValue<span class="nt">&lt;/annotateFields&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/><category scheme="https://yosql.projects.metio.wtf/tags/fields" term="fields" label="fields"/></entry><entry><title type="html">annotateMethods</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classmembers/?utm_source=atom_feed" rel="related" type="text/html" title="classMembers"/><id>https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether Generated annotations should be added to the generated methods.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>The default value of the <code>annotateMethods</code> configuration option is <code>false</code>. Setting the option to <code>false</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-true">Option: &rsquo;true'</h3>
<p>Changing the <code>annotateMethods</code> configuration option to <code>true</code> adds the <code>@Generated</code> annotation to every generated methods. Its is possible to configure each value individually using other config options.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-annotate-methods<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotate-methods<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>annotateMethods</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">annotateMethods</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">annotateMethods</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>annotateMethods</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;annotateMethods&gt;</span>configValue<span class="nt">&lt;/annotateMethods&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/><category scheme="https://yosql.projects.metio.wtf/tags/methods" term="methods" label="methods"/></entry><entry><title type="html">annotationApi</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classmembers/?utm_source=atom_feed" rel="related" type="text/html" title="classMembers"/><id>https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The annotation API to use.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-processing_api">Option: &lsquo;PROCESSING_API&rsquo;</h3>
<p>The default value of the <code>annotationApi</code> configuration option is <code>PROCESSING_API</code>. Setting the option to <code>PROCESSING_API</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-annotation_api">Option: &lsquo;ANNOTATION_API&rsquo;</h3>
<p>Changing the <code>annotationApi</code> configuration option to <code>ANNOTATION_API</code> uses the annotation API instead.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-annotation-api<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotation-api<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>annotationApi</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">annotationApi</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">annotationApi</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>annotationApi</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;annotationApi&gt;</span>configValue<span class="nt">&lt;/annotationApi&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">annotations</title><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><id>https://yosql.projects.metio.wtf/configuration/sql/annotations/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The additional annotations to be placed on generated methods.</p>
<p>This list is empty by default and thus no annotations are added to generated methods.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-yourownannotation">Option: &lsquo;your.own.Annotation&rsquo;</h3>
<p>In order to add an annotation to the generated methods, specify its fully-qualified name.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">your.own.Annotation</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Annotation</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-yourotherannotation">Option: &lsquo;your.other.Annotation&rsquo;</h3>
<p>In order to add an annotation with some member, specify name of the annotation member, its value, and its type. The type defaults to <code>java.lang.String</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">your.other.Annotation</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Annotation</span><span class="p">(</span><span class="n">member</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;value&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- annotations: 
</span></span></span><span class="line"><span class="cl"><span class="c1">--  - type: your.own.Annotation
</span></span></span><span class="line"><span class="cl"><span class="c1">--    members:
</span></span></span><span class="line"><span class="cl"><span class="c1">--      - key: someMember
</span></span></span><span class="line"><span class="cl"><span class="c1">--        value: this is your value
</span></span></span><span class="line"><span class="cl"><span class="c1">--        type: java.lang.String
</span></span></span><span class="line"><span class="cl"><span class="c1">--      - key: another
</span></span></span><span class="line"><span class="cl"><span class="c1">--        value: 5
</span></span></span><span class="line"><span class="cl"><span class="c1">--        type: int
</span></span></span><span class="line"><span class="cl"><span class="c1">--  - type: your.other.Annotation
</span></span></span><span class="line"><span class="cl"><span class="c1">--    members:
</span></span></span><span class="line"><span class="cl"><span class="c1">--      - key: value
</span></span></span><span class="line"><span class="cl"><span class="c1">--        value: yep
</span></span></span><span class="line"><span class="cl"><span class="c1">--  - type: some.annotation.WithoutMembers
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">api</title><link href="https://yosql.projects.metio.wtf/configuration/logging/api/?utm_source=atom_feed" rel="alternate" type="text/html"/><id>https://yosql.projects.metio.wtf/configuration/logging/api/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The logging API to use.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-none">Option: &lsquo;NONE&rsquo;</h3>
<p>The default <code>no-op</code> implementation for a logging generator. It won&rsquo;t generate any logging statements in your generated code.</p>
<h3 id="option-jul">Option: &lsquo;JUL&rsquo;</h3>
<p>The <code>java.util.logging</code> based implementation for a logging generator. The generated code does not require any external non-JDK classes. All loggers use the <a href="/configuration/repositories/basepackagename/">basePackageName</a> as their base name.</p>
<h3 id="option-log4j">Option: &lsquo;LOG4J&rsquo;</h3>
<p>The <a href="https://logging.apache.org/log4j/2.x/">log4j</a> based implementation for a logging generator. All loggers use the <a href="/configuration/repositories/basepackagename/">basePackageName</a> as their base name.</p>
<h3 id="option-slf4j">Option: &lsquo;SLF4J&rsquo;</h3>
<p>The <a href="https://www.slf4j.org/">slf4j</a> based implementation for a logging generator. All loggers use the <a href="/configuration/repositories/basepackagename/">basePackageName</a> as their base name.</p>
<h3 id="option-system">Option: &lsquo;SYSTEM&rsquo;</h3>
<p>The <a href="https://docs.oracle.com/javase/9/docs/api/java/lang/System.Logger.html">System.Logger</a> based implementation for a logging generator.</p>
<h3 id="option-tinylog">Option: &lsquo;TINYLOG&rsquo;</h3>
<p>The <a href="https://tinylog.org/v2/">Tinylog</a> based implementation for a logging generator.</p>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --logging-api<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --api<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>api</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">logging</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">api</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">logging</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">api</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>api</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;logging&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;api&gt;</span>configValue<span class="nt">&lt;/api&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/logging&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/logging" term="logging" label="logging"/></entry><entry><title type="html">apiVersion</title><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalClasses"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalFields"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalMethods"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalParameters"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalVariables"/><id>https://yosql.projects.metio.wtf/configuration/java/apiversion/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls the Java SDK API version to use in generated code.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-17">Option: &lsquo;17&rsquo;</h3>
<p>The default value of the <code>apiVersion</code> configuration option is <code>17</code>. It is updated alongside the minimum Java version required by <code>YoSQL</code>.</p>
<h3 id="option-11">Option: &lsquo;11&rsquo;</h3>
<p>Changing the <code>apiVersion</code> configuration option to <code>11</code> will allow generated code to use Java APIs up until version 11 (including).</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../usefinalclasses/">useFinalClasses</a>: Controls whether classes are declared as final in generated code.</li>
<li><a href="../usefinalfields/">useFinalFields</a>: Controls whether fields are declared as final in generated code.</li>
<li><a href="../usefinalmethods/">useFinalMethods</a>: Controls whether methods are declared as final in generated code.</li>
<li><a href="../usefinalparameters/">useFinalParameters</a>: Controls whether parameters are declared as final in generated code.</li>
<li><a href="../usefinalvariables/">useFinalVariables</a>: Controls whether variables are declared as final in generated code.</li>
<li><a href="../usesealedinterfaces/">useSealedInterfaces</a>: Controls whether interfaces should be sealed</li>
<li><a href="../usetextblocks/">useTextBlocks</a>: Controls the usage of text blocks in generated code.</li>
<li><a href="../usevar/">useVar</a>: Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-api-version<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --api-version<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>apiVersion</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">apiVersion</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">apiVersion</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>apiVersion</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;apiVersion&gt;</span>configValue<span class="nt">&lt;/apiVersion&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">basePackageName</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><id>https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The base package name for all repositories</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-comexamplepersistence">Option: &lsquo;com.example.persistence&rsquo;</h3>
<p>The default value of the <code>basePackageName</code> configuration option is <code>com.example.persistence</code>. Setting the option to <code>com.example.persistence</code> therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-yourowndomain">Option: &lsquo;your.own.domain&rsquo;</h3>
<p>Changing the <code>basePackageName</code> configuration option to <code>your.own.domain</code> generates the following code instead:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">your.own.domain</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-base-package-name<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --base-package-name<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>basePackageName</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">basePackageName</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">basePackageName</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>basePackageName</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;basePackageName&gt;</span>configValue<span class="nt">&lt;/basePackageName&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">batch</title><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><link href="https://yosql.projects.metio.wtf/configuration/names/datasource/?utm_source=atom_feed" rel="related" type="text/html" title="dataSource"/><id>https://yosql.projects.metio.wtf/configuration/names/batch/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a Batch variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-batch<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --batch<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>batch</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">batch</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">batch</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>batch</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;batch&gt;</span>configValue<span class="nt">&lt;/batch&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">catchAndRethrow</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executeonce/?utm_source=atom_feed" rel="related" type="text/html" title="executeOnce"/><id>https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>The default value for <code>catchAndRethrow</code> is <code>true</code>. This will catch any <code>SQLException</code> that happen during SQL execution and re-throw them as <code>RuntimeExceptions</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSome</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>In case you want to handle <code>SQLException</code>s yourself, set <code>catchAndRethrow</code> to <code>false</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">java.sql.SQLException</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSome</span><span class="p">()</span><span class="w"> </span><span class="kd">throws</span><span class="w"> </span><span class="n">SQLException</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-catch-and-rethrow<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --catch-and-rethrow<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>catchAndRethrow</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">catchAndRethrow</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">catchAndRethrow</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>catchAndRethrow</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;catchAndRethrow&gt;</span>configValue<span class="nt">&lt;/catchAndRethrow&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">catchAndRethrow</title><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><id>https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>The default value for <code>catchAndRethrow</code> is <code>true</code>. This will catch any <code>SQLException</code> that happen during SQL execution and re-throw them as <code>RuntimeExceptions</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSome</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>In case you want to handle <code>SQLException</code>s yourself, set <code>catchAndRethrow</code> to <code>false</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">java.sql.SQLException</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSome</span><span class="p">()</span><span class="w"> </span><span class="kd">throws</span><span class="w"> </span><span class="n">SQLException</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- catchAndRethrow: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">classComment</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classmembers/?utm_source=atom_feed" rel="related" type="text/html" title="classMembers"/><id>https://yosql.projects.metio.wtf/configuration/annotations/classcomment/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Sets the comment used for annotated classes.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-do-not-modify---automatically-generated-by-yosql">Option: &lsquo;DO NOT MODIFY - automatically generated by YoSQL&rsquo;</h3>
<p>The default value of the <code>classComment</code> configuration option is <code>DO NOT MODIFY - automatically generated by YoSQL</code>. Setting the option to <code>PROCESSING_API</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-hello-world">Option: &lsquo;Hello World!&rsquo;</h3>
<p>Changing the <code>classComment</code> configuration option to <code>Hello World!</code> produces the following code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;Hello World!&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-class-comment<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --class-comment<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>classComment</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">classComment</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">classComment</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>classComment</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;classComment&gt;</span>configValue<span class="nt">&lt;/classComment&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">classMembers</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/classmembers/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/classmembers/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The annotation members to use for classes.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-without_date">Option: &lsquo;WITHOUT_DATE&rsquo;</h3>
<p>The default value of the <code>classMembers</code> configuration option is <code>WITHOUT_DATE</code>. Setting the option to <code>WITHOUT_DATE</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-all">Option: &lsquo;ALL&rsquo;</h3>
<p>Changing the <code>classMembers</code> configuration option to <code>ALL</code> outputs all annotation members.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-none">Option: &lsquo;NONE&rsquo;</h3>
<p>Changing the <code>classMembers</code> configuration option to <code>NONE</code> outputs no annotation members.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-value">Option: &lsquo;VALUE&rsquo;</h3>
<p>Changing the <code>classMembers</code> configuration option to <code>VALUE</code> outputs only the <code>value</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-date">Option: &lsquo;DATE&rsquo;</h3>
<p>Changing the <code>classMembers</code> configuration option to <code>DATE</code> outputs only the <code>date</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-comment">Option: &lsquo;COMMENT&rsquo;</h3>
<p>Changing the <code>classMembers</code> configuration option to <code>COMMENT</code> outputs only the <code>comment</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">comment</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-class-members<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --class-members<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>classMembers</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">classMembers</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">classMembers</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>classMembers</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;classMembers&gt;</span>configValue<span class="nt">&lt;/classMembers&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/><category scheme="https://yosql.projects.metio.wtf/tags/classes" term="classes" label="classes"/></entry><entry><title type="html">columnCount</title><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><link href="https://yosql.projects.metio.wtf/configuration/names/datasource/?utm_source=atom_feed" rel="related" type="text/html" title="dataSource"/><id>https://yosql.projects.metio.wtf/configuration/names/columncount/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a ColumnCount variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-column-count<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --column-count<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>columnCount</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">columnCount</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">columnCount</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>columnCount</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;columnCount&gt;</span>configValue<span class="nt">&lt;/columnCount&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">columnLabel</title><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><link href="https://yosql.projects.metio.wtf/configuration/names/datasource/?utm_source=atom_feed" rel="related" type="text/html" title="dataSource"/><id>https://yosql.projects.metio.wtf/configuration/names/columnlabel/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a ColumnLabel variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-column-label<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --column-label<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>columnLabel</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">columnLabel</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">columnLabel</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>columnLabel</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;columnLabel&gt;</span>configValue<span class="nt">&lt;/columnLabel&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">connection</title><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/datasource/?utm_source=atom_feed" rel="related" type="text/html" title="dataSource"/><id>https://yosql.projects.metio.wtf/configuration/names/connection/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a Connection variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-connection<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --connection<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>connection</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">connection</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">connection</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>connection</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;connection&gt;</span>configValue<span class="nt">&lt;/connection&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">constructorAnnotations</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/constructorannotations/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/constructorannotations/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The additional annotations to be placed on generated constructors.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-constructor-annotations<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --constructor-annotations<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>constructorAnnotations</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">constructorAnnotations</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">constructorAnnotations</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>constructorAnnotations</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;constructorAnnotations&gt;</span>configValue<span class="nt">&lt;/constructorAnnotations&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">createConnection</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executeonce/?utm_source=atom_feed" rel="related" type="text/html" title="executeOnce"/><id>https://yosql.projects.metio.wtf/configuration/repositories/createconnection/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether the generated code should create/open connection itself or use a given connection.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-create-connection<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --create-connection<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>createConnection</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">createConnection</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">createConnection</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>createConnection</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;createConnection&gt;</span>configValue<span class="nt">&lt;/createConnection&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">createConnection</title><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><id>https://yosql.projects.metio.wtf/configuration/sql/createconnection/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether the generated code should create/open connection itself or use a given connection.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- createConnection: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">databaseMetaData</title><link href="https://yosql.projects.metio.wtf/configuration/names/databasemetadata/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/databasemetadata/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a DatabaseMetaData variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-database-meta-data<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --database-meta-data<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>databaseMetaData</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">databaseMetaData</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">databaseMetaData</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>databaseMetaData</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;databaseMetaData&gt;</span>configValue<span class="nt">&lt;/databaseMetaData&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">databaseProductName</title><link href="https://yosql.projects.metio.wtf/configuration/names/databaseproductname/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/databaseproductname/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of the variable that holds the database product name.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-database-product-name<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --database-product-name<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>databaseProductName</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">databaseProductName</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">databaseProductName</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>databaseProductName</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;databaseProductName&gt;</span>configValue<span class="nt">&lt;/databaseProductName&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">dataSource</title><link href="https://yosql.projects.metio.wtf/configuration/names/datasource/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/datasource/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a DataSource variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-data-source<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --data-source<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>dataSource</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">dataSource</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">dataSource</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>dataSource</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;dataSource&gt;</span>configValue<span class="nt">&lt;/dataSource&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">defaultConverter</title><link href="https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/?utm_source=atom_feed" rel="related" type="text/html" title="generateMapConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterAlias"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterClass"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterMethod"/><link href="https://yosql.projects.metio.wtf/configuration/converter/rowconverters/?utm_source=atom_feed" rel="related" type="text/html" title="rowConverters"/><id>https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The default converter to use, if no other is specified on a query itself.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../generatemapconverter/">generateMapConverter</a>: Whether the ToMap converter should be generated.</li>
<li><a href="../mapconverteralias/">mapConverterAlias</a>: The name of the alias referencing the ToMap converter.</li>
<li><a href="../mapconverterclass/">mapConverterClass</a>: The fully-qualified class name of the ToMap converter.</li>
<li><a href="../mapconvertermethod/">mapConverterMethod</a>: The name of the method to generate/call in the ToMap converter.</li>
<li><a href="../rowconverters/">rowConverters</a>: The converters configured by the user.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --converter-default-converter<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --default-converter<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>defaultConverter</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">defaultConverter</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">defaultConverter</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>defaultConverter</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;converter&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;defaultConverter&gt;</span>configValue<span class="nt">&lt;/defaultConverter&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/converter&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/converter" term="converter" label="converter"/></entry><entry><title type="html">description</title><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><id>https://yosql.projects.metio.wtf/configuration/sql/description/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The description for the SQL statement</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-some-random-description">Option: &lsquo;Some random description&rsquo;</h3>
<p>In case you use the <code>description</code> option, <code>YoSQL</code> will use the supplied value as a JavaDoc comment</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="cm">/**
</span></span></span><span class="line"><span class="cl"><span class="cm">     * Some random description
</span></span></span><span class="line"><span class="cl"><span class="cm">     */</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- description: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">exception</title><link href="https://yosql.projects.metio.wtf/configuration/names/exception/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/exception/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of an exception.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-exception<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --exception<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>exception</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">exception</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">exception</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>exception</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;exception&gt;</span>configValue<span class="nt">&lt;/exception&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">executeBatch</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executeonce/?utm_source=atom_feed" rel="related" type="text/html" title="executeOnce"/><id>https://yosql.projects.metio.wtf/configuration/repositories/executebatch/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Generate methods that are executed as batch</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-execute-batch<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --execute-batch<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>executeBatch</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeBatch</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeBatch</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>executeBatch</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;executeBatch&gt;</span>configValue<span class="nt">&lt;/executeBatch&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeBatch</title><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><id>https://yosql.projects.metio.wtf/configuration/sql/executebatch/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Generate methods that are executed as batch</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- executeBatch: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeBatchPrefix</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executeonce/?utm_source=atom_feed" rel="related" type="text/html" title="executeOnce"/><id>https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The method prefix to use for generated methods that execute in a batch.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: ''</h3>
<p>The default value for <code>executeBatchPrefix</code> is the empty string. It does not add any prefix in front of batch methods.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSomeBatch</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-myprefix">Option: &lsquo;myPrefix&rsquo;</h3>
<p>In case you want to prefix batch methods with something, set the <code>executeBatchPrefix</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">myPrefixWriteSomeBatch</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-execute-batch-prefix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --execute-batch-prefix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>executeBatchPrefix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeBatchPrefix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeBatchPrefix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>executeBatchPrefix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;executeBatchPrefix&gt;</span>configValue<span class="nt">&lt;/executeBatchPrefix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeBatchPrefix</title><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The method prefix to use for generated methods that execute in a batch.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: ''</h3>
<p>The default value for <code>executeBatchPrefix</code> is the empty string. It does not add any prefix in front of batch methods.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSomeBatch</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-myprefix">Option: &lsquo;myPrefix&rsquo;</h3>
<p>In case you want to prefix batch methods with something, set the <code>executeBatchPrefix</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">myPrefixWriteSomeBatch</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- executeBatchPrefix: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeBatchSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executeonce/?utm_source=atom_feed" rel="related" type="text/html" title="executeOnce"/><id>https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The method suffix to use for generated methods that execute in a batch.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-batch">Option: &lsquo;Batch&rsquo;</h3>
<p>The default value for <code>executeBatchSuffix</code> is &lsquo;Batch&rsquo;. It adds the word &lsquo;Batch&rsquo; after each batch method.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSomeBatch</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-other">Option: &lsquo;Other&rsquo;</h3>
<p>In case you want to suffix batch methods with something else, set the <code>executeBatchSuffix</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSomeOther</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-execute-batch-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --execute-batch-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>executeBatchSuffix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeBatchSuffix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeBatchSuffix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>executeBatchSuffix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;executeBatchSuffix&gt;</span>configValue<span class="nt">&lt;/executeBatchSuffix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeBatchSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatchsuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/executebatchsuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The method suffix to use for generated methods that execute in a batch.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-batch">Option: &lsquo;Batch&rsquo;</h3>
<p>The default value for <code>executeBatchSuffix</code> is &lsquo;Batch&rsquo;. It adds the word &lsquo;Batch&rsquo; after each batch method.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSomeBatch</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-other">Option: &lsquo;Other&rsquo;</h3>
<p>In case you want to suffix batch methods with something else, set the <code>executeBatchSuffix</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSomeOther</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- executeBatchSuffix: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executedQuery</title><link href="https://yosql.projects.metio.wtf/configuration/names/executedquery/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/executedquery/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of SQL statement after parameter replacement.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-executed-query<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --executed-query<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>executedQuery</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executedQuery</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executedQuery</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>executedQuery</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;executedQuery&gt;</span>configValue<span class="nt">&lt;/executedQuery&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">executeOnce</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/executeonce/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><id>https://yosql.projects.metio.wtf/configuration/repositories/executeonce/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Generate methods that are executed once with the given parameters</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-execute-once<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --execute-once<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>executeOnce</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeOnce</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeOnce</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>executeOnce</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;executeOnce&gt;</span>configValue<span class="nt">&lt;/executeOnce&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeOnce</title><link href="https://yosql.projects.metio.wtf/configuration/sql/executeonce/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/executeonce/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Generate methods that are executed once with the given parameters</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- executeOnce: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeOncePrefix</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/executeonceprefix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><id>https://yosql.projects.metio.wtf/configuration/repositories/executeonceprefix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The method prefix to use for generated methods that execute once.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: ''</h3>
<p>The default value for <code>executeOncePrefix</code> is the empty string. It does not add any prefix in front of methods that are executed once.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSome</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-myprefix">Option: &lsquo;myPrefix&rsquo;</h3>
<p>In case you want to prefix methods that execute once with something, set the <code>executeOncePrefix</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">myPrefixWriteSome</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-execute-once-prefix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --execute-once-prefix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>executeOncePrefix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeOncePrefix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeOncePrefix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>executeOncePrefix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;executeOncePrefix&gt;</span>configValue<span class="nt">&lt;/executeOncePrefix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeOncePrefix</title><link href="https://yosql.projects.metio.wtf/configuration/sql/executeonceprefix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/executeonceprefix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The method prefix to use for generated methods that execute once.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: ''</h3>
<p>The default value for <code>executeOncePrefix</code> is the empty string. It does not add any prefix in front of methods that are executed once.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSome</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-myprefix">Option: &lsquo;myPrefix&rsquo;</h3>
<p>In case you want to prefix methods that execute once with something, set the <code>executeOncePrefix</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">myPrefixWriteSome</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- executeOncePrefix: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeOnceSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/executeoncesuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><id>https://yosql.projects.metio.wtf/configuration/repositories/executeoncesuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The method suffix to use for generated methods that execute once.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: ''</h3>
<p>The default value for <code>executeOnceSuffix</code> is the empty string. It does not add any suffix after methods that execute once.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSome</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-mysuffix">Option: &lsquo;mySuffix&rsquo;</h3>
<p>In case you want to suffix methods that execute once with something, set the <code>executeOnceSuffix</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSomeMySuffix</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-execute-once-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --execute-once-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>executeOnceSuffix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeOnceSuffix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">executeOnceSuffix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>executeOnceSuffix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;executeOnceSuffix&gt;</span>configValue<span class="nt">&lt;/executeOnceSuffix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">executeOnceSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/sql/executeoncesuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/executeoncesuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The method suffix to use for generated methods that execute once.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: ''</h3>
<p>The default value for <code>executeOnceSuffix</code> is the empty string. It does not add any suffix after methods that execute once.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSome</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-mysuffix">Option: &lsquo;mySuffix&rsquo;</h3>
<p>In case you want to suffix methods that execute once with something, set the <code>executeOnceSuffix</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">writeSomeMySuffix</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- executeOnceSuffix: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">fieldComment</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/fieldcomment/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/fieldcomment/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Sets the comment used for annotated fields.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-do-not-modify---automatically-generated-by-yosql">Option: &lsquo;DO NOT MODIFY - automatically generated by YoSQL&rsquo;</h3>
<p>The default value of the <code>fieldComment</code> configuration option is <code>DO NOT MODIFY - automatically generated by YoSQL</code>. Setting the option to <code>DO NOT MODIFY - automatically generated by YoSQL</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-hello-world">Option: &lsquo;Hello World!&rsquo;</h3>
<p>Changing the <code>fieldComment</code> configuration option to <code>Hello World!</code> produces the following code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;Hello World!&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-field-comment<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --field-comment<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>fieldComment</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">fieldComment</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">fieldComment</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>fieldComment</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;fieldComment&gt;</span>configValue<span class="nt">&lt;/fieldComment&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">fieldMembers</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/fieldmembers/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/fieldmembers/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The annotation members to use for fields.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-without_date">Option: &lsquo;WITHOUT_DATE&rsquo;</h3>
<p>The default value of the <code>fieldMembers</code> configuration option is <code>WITHOUT_DATE</code>. Setting the option to <code>WITHOUT_DATE</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-all">Option: &lsquo;ALL&rsquo;</h3>
<p>Changing the <code>fieldMembers</code> configuration option to <code>ALL</code> outputs all annotation members.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-none">Option: &lsquo;NONE&rsquo;</h3>
<p>Changing the <code>fieldMembers</code> configuration option to <code>NONE</code> outputs no annotation members.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nd">@Generated</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-value">Option: &lsquo;VALUE&rsquo;</h3>
<p>Changing the <code>fieldMembers</code> configuration option to <code>VALUE</code> outputs only the <code>value</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-date">Option: &lsquo;DATE&rsquo;</h3>
<p>Changing the <code>fieldMembers</code> configuration option to <code>DATE</code> outputs only the <code>date</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-comment">Option: &lsquo;COMMENT&rsquo;</h3>
<p>Changing the <code>fieldMembers</code> configuration option to <code>COMMENT</code> outputs only the <code>comment</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-field-members<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --field-members<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>fieldMembers</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">fieldMembers</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">fieldMembers</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>fieldMembers</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;fieldMembers&gt;</span>configValue<span class="nt">&lt;/fieldMembers&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">generateInterfaces</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/generateinterfaces/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><id>https://yosql.projects.metio.wtf/configuration/repositories/generateinterfaces/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Generate interfaces for all repositories</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-generate-interfaces<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --generate-interfaces<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>generateInterfaces</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">generateInterfaces</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">generateInterfaces</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>generateInterfaces</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;generateInterfaces&gt;</span>configValue<span class="nt">&lt;/generateInterfaces&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">generateMapConverter</title><link href="https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/?utm_source=atom_feed" rel="related" type="text/html" title="defaultConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterAlias"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterClass"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterMethod"/><link href="https://yosql.projects.metio.wtf/configuration/converter/rowconverters/?utm_source=atom_feed" rel="related" type="text/html" title="rowConverters"/><id>https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Whether the ToMap converter should be generated.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../defaultconverter/">defaultConverter</a>: The default converter to use, if no other is specified on a query itself.</li>
<li><a href="../mapconverteralias/">mapConverterAlias</a>: The name of the alias referencing the ToMap converter.</li>
<li><a href="../mapconverterclass/">mapConverterClass</a>: The fully-qualified class name of the ToMap converter.</li>
<li><a href="../mapconvertermethod/">mapConverterMethod</a>: The name of the method to generate/call in the ToMap converter.</li>
<li><a href="../rowconverters/">rowConverters</a>: The converters configured by the user.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --converter-generate-map-converter<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --generate-map-converter<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>generateMapConverter</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">generateMapConverter</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">generateMapConverter</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>generateMapConverter</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;converter&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;generateMapConverter&gt;</span>configValue<span class="nt">&lt;/generateMapConverter&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/converter&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/converter" term="converter" label="converter"/></entry><entry><title type="html">generatorName</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/generatorname/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/generatorname/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of the code generator</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-yosql">Option: &lsquo;YoSQL&rsquo;</h3>
<p>The default value of the <code>generatorName</code> configuration option is <code>YoSQL</code>. Setting the option to <code>YoSQL</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-hello-world">Option: &lsquo;Hello World!&rsquo;</h3>
<p>Changing the <code>generatorName</code> configuration option to <code>Hello World!</code> produces the following code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;Hello World!&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">someField</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-generator-name<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --generator-name<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>generatorName</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">generatorName</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">generatorName</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>generatorName</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;generatorName&gt;</span>configValue<span class="nt">&lt;/generatorName&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">indexSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/names/indexsuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/indexsuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name suffix to add for index lookup tables.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-index-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --index-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>indexSuffix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">indexSuffix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">indexSuffix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>indexSuffix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;indexSuffix&gt;</span>configValue<span class="nt">&lt;/indexSuffix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">indexVariable</title><link href="https://yosql.projects.metio.wtf/configuration/names/indexvariable/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/indexvariable/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a index variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-index-variable<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --index-variable<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>indexVariable</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">indexVariable</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">indexVariable</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>indexVariable</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;indexVariable&gt;</span>configValue<span class="nt">&lt;/indexVariable&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">injectConverters</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/injectconverters/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><id>https://yosql.projects.metio.wtf/configuration/repositories/injectconverters/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Toggles whether converters should be injected as constructor parameters.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>The default value of the <code>injectConverters</code> configuration option is <code>false</code>. It produces code similar to this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">DataSource</span><span class="w"> </span><span class="n">dataSource</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">ToMapConverter</span><span class="w"> </span><span class="n">toMap</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="nf">SomeRepository</span><span class="p">(</span><span class="kd">final</span><span class="w"> </span><span class="n">DataSource</span><span class="w"> </span><span class="n">dataSource</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="na">dataSource</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dataSource</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="na">toMap</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">ToMapConverter</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-true">Option: &rsquo;true'</h3>
<p>Changing the <code>injectConverters</code> configuration option to <code>true</code> generates the following code instead:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">your.own.domain</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">DataSource</span><span class="w"> </span><span class="n">dataSource</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">ToMapConverter</span><span class="w"> </span><span class="n">toMap</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="nf">SomeRepository</span><span class="p">(</span><span class="kd">final</span><span class="w"> </span><span class="n">DataSource</span><span class="w"> </span><span class="n">dataSource</span><span class="p">,</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">ToMapConverter</span><span class="w"> </span><span class="n">toMap</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="na">dataSource</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dataSource</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="na">toMap</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">toMap</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-inject-converters<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --inject-converters<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>injectConverters</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">injectConverters</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">injectConverters</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>injectConverters</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;injectConverters&gt;</span>configValue<span class="nt">&lt;/injectConverters&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">inputBaseDirectory</title><link href="https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="outputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/skiplines/?utm_source=atom_feed" rel="related" type="text/html" title="skipLines"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesCharset"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesSuffix"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/?utm_source=atom_feed" rel="related" type="text/html" title="sqlStatementSeparator"/><id>https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The input directory for the user written SQL files.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: &lsquo;.&rsquo;</h3>
<p>The default value of the <code>inputBaseDirectory</code> configuration option used by the Ant- and CLI-tooling is <code>.</code> - the current directory.</p>
<h3 id="option-srcmainyosql">Option: &lsquo;src/main/yosql&rsquo;</h3>
<p>The default value of the <code>inputBaseDirectory</code> configuration option used by the Gradle- and Maven-tooling is <code>src/main/yosql</code> to better reflect the commonly used project structure expected by those tools.</p>
<h3 id="option-someotherdirectory">Option: &lsquo;some/other/directory&rsquo;</h3>
<p>Changing the <code>inputBaseDirectory</code> configuration option to <code>some/other/directory!</code> configures <code>YoSQL</code> to look into the path relative directory <code>some/other/directory</code>.</p>
<h3 id="option-anabsolutepath">Option: &lsquo;/an/absolute/path&rsquo;</h3>
<p>Changing the <code>inputBaseDirectory</code> configuration option to <code>/an/absolute/path!</code> configures <code>YoSQL</code> to look into the absolute directory path <code>/an/absolute/path</code>.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../outputbasedirectory/">outputBaseDirectory</a>: The output directory for the generated classes.</li>
<li><a href="../skiplines/">skipLines</a>: The number of lines to skip in each file (e.g. a copyright header).</li>
<li><a href="../sqlfilescharset/">sqlFilesCharset</a>: The charset to use while reading .sql files.</li>
<li><a href="../sqlfilessuffix/">sqlFilesSuffix</a>: The file ending to use while searching for SQL files.</li>
<li><a href="../sqlstatementseparator/">sqlStatementSeparator</a>: The separator to split SQL statements inside a single .sql file.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --files-input-base-directory<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --input-base-directory<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>inputBaseDirectory</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">inputBaseDirectory</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">inputBaseDirectory</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>inputBaseDirectory</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;files&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;inputBaseDirectory&gt;</span>configValue<span class="nt">&lt;/inputBaseDirectory&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/files&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/files" term="files" label="files"/></entry><entry><title type="html">jdbcIndexVariable</title><link href="https://yosql.projects.metio.wtf/configuration/names/jdbcindexvariable/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/jdbcindexvariable/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a JDBC index variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-jdbc-index-variable<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --jdbc-index-variable<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>jdbcIndexVariable</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">jdbcIndexVariable</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">jdbcIndexVariable</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>jdbcIndexVariable</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;jdbcIndexVariable&gt;</span>configValue<span class="nt">&lt;/jdbcIndexVariable&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">list</title><link href="https://yosql.projects.metio.wtf/configuration/names/list/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/list/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a List variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-list<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --list<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>list</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">list</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">list</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>list</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;list&gt;</span>configValue<span class="nt">&lt;/list&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">logger</title><link href="https://yosql.projects.metio.wtf/configuration/names/logger/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/logger/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of the logger instance.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-logger<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --logger<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>logger</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">logger</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">logger</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>logger</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;logger&gt;</span>configValue<span class="nt">&lt;/logger&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">mapConverterAlias</title><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/?utm_source=atom_feed" rel="related" type="text/html" title="defaultConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/?utm_source=atom_feed" rel="related" type="text/html" title="generateMapConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterClass"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterMethod"/><link href="https://yosql.projects.metio.wtf/configuration/converter/rowconverters/?utm_source=atom_feed" rel="related" type="text/html" title="rowConverters"/><id>https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of the alias referencing the ToMap converter.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../defaultconverter/">defaultConverter</a>: The default converter to use, if no other is specified on a query itself.</li>
<li><a href="../generatemapconverter/">generateMapConverter</a>: Whether the ToMap converter should be generated.</li>
<li><a href="../mapconverterclass/">mapConverterClass</a>: The fully-qualified class name of the ToMap converter.</li>
<li><a href="../mapconvertermethod/">mapConverterMethod</a>: The name of the method to generate/call in the ToMap converter.</li>
<li><a href="../rowconverters/">rowConverters</a>: The converters configured by the user.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --converter-map-converter-alias<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --map-converter-alias<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>mapConverterAlias</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">mapConverterAlias</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">mapConverterAlias</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>mapConverterAlias</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;converter&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;mapConverterAlias&gt;</span>configValue<span class="nt">&lt;/mapConverterAlias&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/converter&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/converter" term="converter" label="converter"/></entry><entry><title type="html">mapConverterClass</title><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/?utm_source=atom_feed" rel="related" type="text/html" title="defaultConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/?utm_source=atom_feed" rel="related" type="text/html" title="generateMapConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterAlias"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterMethod"/><link href="https://yosql.projects.metio.wtf/configuration/converter/rowconverters/?utm_source=atom_feed" rel="related" type="text/html" title="rowConverters"/><id>https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The fully-qualified class name of the ToMap converter.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../defaultconverter/">defaultConverter</a>: The default converter to use, if no other is specified on a query itself.</li>
<li><a href="../generatemapconverter/">generateMapConverter</a>: Whether the ToMap converter should be generated.</li>
<li><a href="../mapconverteralias/">mapConverterAlias</a>: The name of the alias referencing the ToMap converter.</li>
<li><a href="../mapconvertermethod/">mapConverterMethod</a>: The name of the method to generate/call in the ToMap converter.</li>
<li><a href="../rowconverters/">rowConverters</a>: The converters configured by the user.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --converter-map-converter-class<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --map-converter-class<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>mapConverterClass</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">mapConverterClass</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">mapConverterClass</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>mapConverterClass</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;converter&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;mapConverterClass&gt;</span>configValue<span class="nt">&lt;/mapConverterClass&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/converter&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/converter" term="converter" label="converter"/></entry><entry><title type="html">mapConverterMethod</title><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/?utm_source=atom_feed" rel="related" type="text/html" title="defaultConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/?utm_source=atom_feed" rel="related" type="text/html" title="generateMapConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterAlias"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterClass"/><link href="https://yosql.projects.metio.wtf/configuration/converter/rowconverters/?utm_source=atom_feed" rel="related" type="text/html" title="rowConverters"/><id>https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of the method to generate/call in the ToMap converter.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../defaultconverter/">defaultConverter</a>: The default converter to use, if no other is specified on a query itself.</li>
<li><a href="../generatemapconverter/">generateMapConverter</a>: Whether the ToMap converter should be generated.</li>
<li><a href="../mapconverteralias/">mapConverterAlias</a>: The name of the alias referencing the ToMap converter.</li>
<li><a href="../mapconverterclass/">mapConverterClass</a>: The fully-qualified class name of the ToMap converter.</li>
<li><a href="../rowconverters/">rowConverters</a>: The converters configured by the user.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --converter-map-converter-method<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --map-converter-method<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>mapConverterMethod</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">mapConverterMethod</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">mapConverterMethod</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>mapConverterMethod</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;converter&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;mapConverterMethod&gt;</span>configValue<span class="nt">&lt;/mapConverterMethod&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/converter&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/converter" term="converter" label="converter"/></entry><entry><title type="html">maxThreads</title><link href="https://yosql.projects.metio.wtf/configuration/resources/maxthreads/?utm_source=atom_feed" rel="alternate" type="text/html"/><id>https://yosql.projects.metio.wtf/configuration/resources/maxthreads/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls how many threads are used during code generation.</p>
<p>The maximum number will be capped to the number of available CPU cores of your system.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-1">Option: &lsquo;1&rsquo;</h3>
<p>The default value of the <code>maxThreads</code> configuration option is <code>1</code> which uses one thread to generate code.</p>
<h3 id="option-123">Option: &lsquo;123&rsquo;</h3>
<p>Changing the <code>maxThreads</code> configuration option to <code>123</code> will use the available number of CPU cores in your system or 123 threads, depending on which is lower.</p>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --resources-max-threads<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --max-threads<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>maxThreads</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">resources</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">maxThreads</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">resources</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">maxThreads</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>maxThreads</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;resources&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;maxThreads&gt;</span>configValue<span class="nt">&lt;/maxThreads&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/resources&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/resources" term="resources" label="resources"/><category scheme="https://yosql.projects.metio.wtf/tags/threads" term="threads" label="threads"/></entry><entry><title type="html">methodAnnotations</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/methodannotations/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/methodannotations/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The additional annotations to be placed on generated methods.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-method-annotations<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --method-annotations<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>methodAnnotations</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">methodAnnotations</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">methodAnnotations</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>methodAnnotations</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;methodAnnotations&gt;</span>configValue<span class="nt">&lt;/methodAnnotations&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">methodComment</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/methodcomment/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/methodcomment/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Sets the comment used for annotated methods.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-do-not-modify---automatically-generated-by-yosql">Option: &lsquo;DO NOT MODIFY - automatically generated by YoSQL&rsquo;</h3>
<p>The default value of the <code>methodComment</code> configuration option is <code>DO NOT MODIFY - automatically generated by YoSQL</code>. Setting the option to <code>DO NOT MODIFY - automatically generated by YoSQL</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-hello-world">Option: &lsquo;Hello World!&rsquo;</h3>
<p>Changing the <code>methodComment</code> configuration option to <code>Hello World!</code> produces the following code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;Hello World!&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-method-comment<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --method-comment<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>methodComment</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">methodComment</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">methodComment</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>methodComment</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;methodComment&gt;</span>configValue<span class="nt">&lt;/methodComment&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">methodMembers</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/methodmembers/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/methodmembers/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The annotation members to use for methods.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-without_date">Option: &lsquo;WITHOUT_DATE&rsquo;</h3>
<p>The default value of the <code>methodMembers</code> configuration option is <code>WITHOUT_DATE</code>. Setting the option to <code>WITHOUT_DATE</code> therefore produces the same code generated as the default configuration.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-all">Option: &lsquo;ALL&rsquo;</h3>
<p>Changing the <code>methodMembers</code> configuration option to <code>ALL</code> outputs all annotation members.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-none">Option: &lsquo;NONE&rsquo;</h3>
<p>Changing the <code>methodMembers</code> configuration option to <code>NONE</code> outputs no annotation members.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-value">Option: &lsquo;VALUE&rsquo;</h3>
<p>Changing the <code>methodMembers</code> configuration option to <code>VALUE</code> outputs only the <code>value</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-date">Option: &lsquo;DATE&rsquo;</h3>
<p>Changing the <code>methodMembers</code> configuration option to <code>DATE</code> outputs only the <code>date</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&lt;current_timestamp&gt;&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-comment">Option: &lsquo;COMMENT&rsquo;</h3>
<p>Changing the <code>methodMembers</code> configuration option to <code>COMMENT</code> outputs only the <code>comment</code> member.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">javax.annotation.processing.Generated</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Generated</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">comments</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DO NOT MODIFY - automatically generated by YoSQL&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">someMethod</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../repositoryannotations/">repositoryAnnotations</a>: The additional annotations to be placed on generated repository classes.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-method-members<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --method-members<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>methodMembers</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">methodMembers</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">methodMembers</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>methodMembers</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;methodMembers&gt;</span>configValue<span class="nt">&lt;/methodMembers&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">name</title><link href="https://yosql.projects.metio.wtf/configuration/sql/name/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/name/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of the SQL statement</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-yourspecialname">Option: &lsquo;yourSpecialName&rsquo;</h3>
<p>In case you use the <code>name</code> option, <code>YoSQL</code> will use the supplied value as a method name</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">yourSpecialName</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ... some code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- name: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">outputBaseDirectory</title><link href="https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="inputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/skiplines/?utm_source=atom_feed" rel="related" type="text/html" title="skipLines"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesCharset"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesSuffix"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/?utm_source=atom_feed" rel="related" type="text/html" title="sqlStatementSeparator"/><id>https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The output directory for the generated classes.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: &lsquo;.&rsquo;</h3>
<p>The default value of the <code>outputBaseDirectory</code> configuration option is <code>.</code> - the current directory. Note that tooling may change the default output base directory to better reflect a typical project structure used with such a tool.</p>
<h3 id="option-someotherdirectory">Option: &lsquo;some/other/directory&rsquo;</h3>
<p>Changing the <code>outputBaseDirectory</code> configuration option to <code>some/other/directory!</code> configures <code>YoSQL</code> to write into the relative directory<code>some/other/directory</code>.</p>
<h3 id="option-anabsolutepath">Option: &lsquo;/an/absolute/path&rsquo;</h3>
<p>Changing the <code>outputBaseDirectory</code> configuration option to <code>/an/absolute/path!</code> configures <code>YoSQL</code> to write into the absolute directory path <code>/an/absolute/path</code>.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../inputbasedirectory/">inputBaseDirectory</a>: The input directory for the user written SQL files.</li>
<li><a href="../skiplines/">skipLines</a>: The number of lines to skip in each file (e.g. a copyright header).</li>
<li><a href="../sqlfilescharset/">sqlFilesCharset</a>: The charset to use while reading .sql files.</li>
<li><a href="../sqlfilessuffix/">sqlFilesSuffix</a>: The file ending to use while searching for SQL files.</li>
<li><a href="../sqlstatementseparator/">sqlStatementSeparator</a>: The separator to split SQL statements inside a single .sql file.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --files-output-base-directory<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --output-base-directory<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>outputBaseDirectory</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">outputBaseDirectory</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">outputBaseDirectory</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>outputBaseDirectory</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;files&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;outputBaseDirectory&gt;</span>configValue<span class="nt">&lt;/outputBaseDirectory&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/files&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/files" term="files" label="files"/></entry><entry><title type="html">parameters</title><link href="https://yosql.projects.metio.wtf/configuration/sql/parameters/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/parameters/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The parameters of the SQL statement.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- parameters: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">query</title><link href="https://yosql.projects.metio.wtf/configuration/names/query/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/query/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of selected SQL statement.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-query<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --query<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>query</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">query</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">query</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>query</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;query&gt;</span>configValue<span class="nt">&lt;/query&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">rawQuery</title><link href="https://yosql.projects.metio.wtf/configuration/names/rawquery/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/rawquery/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name of SQL statement before parameter replacement.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-raw-query<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --raw-query<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>rawQuery</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rawQuery</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rawQuery</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>rawQuery</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;rawQuery&gt;</span>configValue<span class="nt">&lt;/rawQuery&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">rawSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/names/rawsuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/rawsuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name suffix to add for raw SQL statements.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-raw-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --raw-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>rawSuffix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rawSuffix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rawSuffix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>rawSuffix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;rawSuffix&gt;</span>configValue<span class="nt">&lt;/rawSuffix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">repository</title><link href="https://yosql.projects.metio.wtf/configuration/sql/repository/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/repository/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The fully qualified name of the target repository class.</p>
<p>In order to overwrite the target repository of a single SQL statement, use the <code>repository</code> option.
You can specify the fully qualified name of the repository that should contain your statement, or
you can just specify the name of the class and <code>YoSQL</code> will automatically add the
<a href="../../repositories/basepackagename/">base package name</a> as well as the
<a href="../../repositories/repositorynameprefix/">repositoryNamePrefix</a> and
<a href="../../repositories/repositorynamesuffix/">repositoryNameSuffix</a> for you.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- repository: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">repositoryAnnotations</title><link href="https://yosql.projects.metio.wtf/configuration/annotations/repositoryannotations/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/?utm_source=atom_feed" rel="related" type="text/html" title="annotateClasses"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/?utm_source=atom_feed" rel="related" type="text/html" title="annotateFields"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/?utm_source=atom_feed" rel="related" type="text/html" title="annotateMethods"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/?utm_source=atom_feed" rel="related" type="text/html" title="annotationApi"/><link href="https://yosql.projects.metio.wtf/configuration/annotations/classcomment/?utm_source=atom_feed" rel="related" type="text/html" title="classComment"/><id>https://yosql.projects.metio.wtf/configuration/annotations/repositoryannotations/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The additional annotations to be placed on generated repository classes.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotateclasses/">annotateClasses</a>: Controls whether Generated annotations should be added to the generated classes.</li>
<li><a href="../annotatefields/">annotateFields</a>: Controls whether Generated annotations should be added to the generated fields.</li>
<li><a href="../annotatemethods/">annotateMethods</a>: Controls whether Generated annotations should be added to the generated methods.</li>
<li><a href="../annotationapi/">annotationApi</a>: The annotation API to use.</li>
<li><a href="../classcomment/">classComment</a>: Sets the comment used for annotated classes.</li>
<li><a href="../classmembers/">classMembers</a>: The annotation members to use for classes.</li>
<li><a href="../constructorannotations/">constructorAnnotations</a>: The additional annotations to be placed on generated constructors.</li>
<li><a href="../fieldcomment/">fieldComment</a>: Sets the comment used for annotated fields.</li>
<li><a href="../fieldmembers/">fieldMembers</a>: The annotation members to use for fields.</li>
<li><a href="../generatorname/">generatorName</a>: The name of the code generator</li>
<li><a href="../methodannotations/">methodAnnotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../methodcomment/">methodComment</a>: Sets the comment used for annotated methods.</li>
<li><a href="../methodmembers/">methodMembers</a>: The annotation members to use for methods.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --annotations-repository-annotations<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repository-annotations<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>repositoryAnnotations</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryAnnotations</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">annotations</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryAnnotations</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>repositoryAnnotations</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;annotations&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;repositoryAnnotations&gt;</span>configValue<span class="nt">&lt;/repositoryAnnotations&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/annotations&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/annotations" term="annotations" label="annotations"/></entry><entry><title type="html">repositoryInterfacePrefix</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfaceprefix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><id>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfaceprefix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The repository interface name prefix to use.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-repository-interface-prefix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repository-interface-prefix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>repositoryInterfacePrefix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryInterfacePrefix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryInterfacePrefix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>repositoryInterfacePrefix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;repositoryInterfacePrefix&gt;</span>configValue<span class="nt">&lt;/repositoryInterfacePrefix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">repositoryInterfaceSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfacesuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><id>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfacesuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The repository interface name suffix to use.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-repository-interface-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repository-interface-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>repositoryInterfaceSuffix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryInterfaceSuffix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryInterfaceSuffix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>repositoryInterfaceSuffix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;repositoryInterfaceSuffix&gt;</span>configValue<span class="nt">&lt;/repositoryInterfaceSuffix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">repositoryNamePrefix</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/repositorynameprefix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><id>https://yosql.projects.metio.wtf/configuration/repositories/repositorynameprefix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The repository name prefix to use.</p>
<p>In case the repository name already contains the configured prefix, it will not be added twice.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: ''</h3>
<p>The default value of the <code>repositoryNamePrefix</code> configuration option is the empty string. Setting the option to `` therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-database">Option: &lsquo;Database&rsquo;</h3>
<p>Changing the <code>repositoryNamePrefix</code> configuration option to <code>Database</code> generates the following code instead:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">DatabaseSomeRepo</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-repository-name-prefix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repository-name-prefix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>repositoryNamePrefix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryNamePrefix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryNamePrefix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>repositoryNamePrefix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;repositoryNamePrefix&gt;</span>configValue<span class="nt">&lt;/repositoryNamePrefix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">repositoryNameSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/repositorynamesuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><id>https://yosql.projects.metio.wtf/configuration/repositories/repositorynamesuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The repository name suffix to use.</p>
<p>In case the repository name already contains the configured suffix, it will not be added twice.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-repository">Option: &lsquo;Repository&rsquo;</h3>
<p>The default value of the <code>repositoryNameSuffix</code> configuration option is <code>Repository</code>. Setting the option to <code>Repository</code> therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepository</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="option-repo">Option: &lsquo;Repo&rsquo;</h3>
<p>Changing the <code>repositoryNameSuffix</code> configuration option to <code>Repo</code> generates the following code instead:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">com.example.persistence</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">SomeRepo</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ... rest of generated code (same as above)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-repository-name-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repository-name-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>repositoryNameSuffix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryNameSuffix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">repositoryNameSuffix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>repositoryNameSuffix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;repositoryNameSuffix&gt;</span>configValue<span class="nt">&lt;/repositoryNameSuffix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">resultRowConverter</title><link href="https://yosql.projects.metio.wtf/configuration/sql/resultrowconverter/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/resultrowconverter/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The alias or fully-qualified name of the converter to use</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- resultRowConverter: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">resultSet</title><link href="https://yosql.projects.metio.wtf/configuration/names/resultset/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/resultset/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a ResultSet variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-result-set<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --result-set<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>resultSet</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">resultSet</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">resultSet</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>resultSet</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;resultSet&gt;</span>configValue<span class="nt">&lt;/resultSet&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">resultSetMetaData</title><link href="https://yosql.projects.metio.wtf/configuration/names/resultsetmetadata/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/resultsetmetadata/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a ResultSetMetaData variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-result-set-meta-data<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --result-set-meta-data<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>resultSetMetaData</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">resultSetMetaData</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">resultSetMetaData</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>resultSetMetaData</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;resultSetMetaData&gt;</span>configValue<span class="nt">&lt;/resultSetMetaData&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">returningMode</title><link href="https://yosql.projects.metio.wtf/configuration/sql/returningmode/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/returningmode/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The returning mode of the SQL statement.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- returningMode: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">row</title><link href="https://yosql.projects.metio.wtf/configuration/names/row/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/row/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a row variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../statement/">statement</a>: The name for a Statement variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-row<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --row<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>row</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">row</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">row</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>row</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;row&gt;</span>configValue<span class="nt">&lt;/row&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">rowConverters</title><link href="https://yosql.projects.metio.wtf/configuration/converter/rowconverters/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/?utm_source=atom_feed" rel="related" type="text/html" title="defaultConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/?utm_source=atom_feed" rel="related" type="text/html" title="generateMapConverter"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterAlias"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterClass"/><link href="https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/?utm_source=atom_feed" rel="related" type="text/html" title="mapConverterMethod"/><id>https://yosql.projects.metio.wtf/configuration/converter/rowconverters/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The converters configured by the user.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../defaultconverter/">defaultConverter</a>: The default converter to use, if no other is specified on a query itself.</li>
<li><a href="../generatemapconverter/">generateMapConverter</a>: Whether the ToMap converter should be generated.</li>
<li><a href="../mapconverteralias/">mapConverterAlias</a>: The name of the alias referencing the ToMap converter.</li>
<li><a href="../mapconverterclass/">mapConverterClass</a>: The fully-qualified class name of the ToMap converter.</li>
<li><a href="../mapconvertermethod/">mapConverterMethod</a>: The name of the method to generate/call in the ToMap converter.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --converter-row-converters<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --row-converters<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>rowConverters</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rowConverters</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">converter</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rowConverters</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>rowConverters</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;converter&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;rowConverters&gt;</span>configValue<span class="nt">&lt;/rowConverters&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/converter&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/converter" term="converter" label="converter"/></entry><entry><title type="html">skipLines</title><link href="https://yosql.projects.metio.wtf/configuration/files/skiplines/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="inputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="outputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesCharset"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesSuffix"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/?utm_source=atom_feed" rel="related" type="text/html" title="sqlStatementSeparator"/><id>https://yosql.projects.metio.wtf/configuration/files/skiplines/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The number of lines to skip in each file (e.g. a copyright header).</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-0">Option: &lsquo;0&rsquo;</h3>
<p>The default value of the <code>skipLines</code> configuration option is <code>0</code> - which does not skip any lines.</p>
<h3 id="option-0-1">Option: &lsquo;0&rsquo;</h3>
<p>Changing the <code>skipLines</code> configuration option to <code>5</code> configures <code>YoSQL</code> skip the first 5 lines in each <code>.sql</code> file in encounters.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../inputbasedirectory/">inputBaseDirectory</a>: The input directory for the user written SQL files.</li>
<li><a href="../outputbasedirectory/">outputBaseDirectory</a>: The output directory for the generated classes.</li>
<li><a href="../sqlfilescharset/">sqlFilesCharset</a>: The charset to use while reading .sql files.</li>
<li><a href="../sqlfilessuffix/">sqlFilesSuffix</a>: The file ending to use while searching for SQL files.</li>
<li><a href="../sqlstatementseparator/">sqlStatementSeparator</a>: The separator to split SQL statements inside a single .sql file.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --files-skip-lines<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --skip-lines<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>skipLines</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">skipLines</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">skipLines</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>skipLines</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;files&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;skipLines&gt;</span>configValue<span class="nt">&lt;/skipLines&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/files&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/files" term="files" label="files"/></entry><entry><title type="html">sqlFilesCharset</title><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="inputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="outputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/skiplines/?utm_source=atom_feed" rel="related" type="text/html" title="skipLines"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesSuffix"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/?utm_source=atom_feed" rel="related" type="text/html" title="sqlStatementSeparator"/><id>https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The charset to use while reading .sql files.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-utf-8">Option: &lsquo;UTF-8&rsquo;</h3>
<p>The default value of the <code>sqlFilesCharset</code> configuration option is <code>UTF-8</code> which should work on most systems.</p>
<h3 id="option-iso-8859-1">Option: &lsquo;ISO-8859-1&rsquo;</h3>
<p>Changing the <code>sqlFilesCharset</code> configuration option to <code>ISO-8859-1</code> configures <code>YoSQL</code> to use the <code>ISO-8859-1</code> charset while reading your <code>.sql</code> files.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../inputbasedirectory/">inputBaseDirectory</a>: The input directory for the user written SQL files.</li>
<li><a href="../outputbasedirectory/">outputBaseDirectory</a>: The output directory for the generated classes.</li>
<li><a href="../skiplines/">skipLines</a>: The number of lines to skip in each file (e.g. a copyright header).</li>
<li><a href="../sqlfilessuffix/">sqlFilesSuffix</a>: The file ending to use while searching for SQL files.</li>
<li><a href="../sqlstatementseparator/">sqlStatementSeparator</a>: The separator to split SQL statements inside a single .sql file.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --files-sql-files-charset<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --sql-files-charset<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>sqlFilesCharset</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlFilesCharset</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlFilesCharset</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>sqlFilesCharset</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;files&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;sqlFilesCharset&gt;</span>configValue<span class="nt">&lt;/sqlFilesCharset&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/files&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/files" term="files" label="files"/></entry><entry><title type="html">sqlFilesSuffix</title><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="inputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="outputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/skiplines/?utm_source=atom_feed" rel="related" type="text/html" title="skipLines"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesCharset"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/?utm_source=atom_feed" rel="related" type="text/html" title="sqlStatementSeparator"/><id>https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The file ending to use while searching for SQL files.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-sql">Option: &lsquo;.sql&rsquo;</h3>
<p>The default value of the <code>sqlFilesSuffix</code> configuration option is <code>.sql</code>. It matches all files that end with <code>.sql</code>.</p>
<h3 id="option-other">Option: &lsquo;.other&rsquo;</h3>
<p>Changing the <code>sqlFilesSuffix</code> configuration option to <code>.other</code> configures <code>YoSQL</code> look for files that end in <code>.other</code>.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../inputbasedirectory/">inputBaseDirectory</a>: The input directory for the user written SQL files.</li>
<li><a href="../outputbasedirectory/">outputBaseDirectory</a>: The output directory for the generated classes.</li>
<li><a href="../skiplines/">skipLines</a>: The number of lines to skip in each file (e.g. a copyright header).</li>
<li><a href="../sqlfilescharset/">sqlFilesCharset</a>: The charset to use while reading .sql files.</li>
<li><a href="../sqlstatementseparator/">sqlStatementSeparator</a>: The separator to split SQL statements inside a single .sql file.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --files-sql-files-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --sql-files-suffix<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>sqlFilesSuffix</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlFilesSuffix</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlFilesSuffix</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>sqlFilesSuffix</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;files&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;sqlFilesSuffix&gt;</span>configValue<span class="nt">&lt;/sqlFilesSuffix&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/files&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/files" term="files" label="files"/></entry><entry><title type="html">sqlStatementSeparator</title><link href="https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="inputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/?utm_source=atom_feed" rel="related" type="text/html" title="outputBaseDirectory"/><link href="https://yosql.projects.metio.wtf/configuration/files/skiplines/?utm_source=atom_feed" rel="related" type="text/html" title="skipLines"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesCharset"/><link href="https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/?utm_source=atom_feed" rel="related" type="text/html" title="sqlFilesSuffix"/><id>https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The separator to split SQL statements inside a single .sql file.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-">Option: &lsquo;;&rsquo;</h3>
<p>The default value of the <code>sqlStatementSeparator</code> configuration option is <code>.sql</code>. It matches all files that end with <code>.sql</code>.</p>
<h3 id="option--1">Option: &lsquo;|&rsquo;</h3>
<p>Changing the <code>sqlStatementSeparator</code> configuration option to <code>|</code> configures <code>YoSQL</code> split <code>.sql</code> files using the <code>|</code> character.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../inputbasedirectory/">inputBaseDirectory</a>: The input directory for the user written SQL files.</li>
<li><a href="../outputbasedirectory/">outputBaseDirectory</a>: The output directory for the generated classes.</li>
<li><a href="../skiplines/">skipLines</a>: The number of lines to skip in each file (e.g. a copyright header).</li>
<li><a href="../sqlfilescharset/">sqlFilesCharset</a>: The charset to use while reading .sql files.</li>
<li><a href="../sqlfilessuffix/">sqlFilesSuffix</a>: The file ending to use while searching for SQL files.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --files-sql-statement-separator<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --sql-statement-separator<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>sqlStatementSeparator</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlStatementSeparator</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">files</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlStatementSeparator</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>sqlStatementSeparator</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;files&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;sqlStatementSeparator&gt;</span>configValue<span class="nt">&lt;/sqlStatementSeparator&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/files&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/files" term="files" label="files"/></entry><entry><title type="html">statement</title><link href="https://yosql.projects.metio.wtf/configuration/names/statement/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/names/action/?utm_source=atom_feed" rel="related" type="text/html" title="action"/><link href="https://yosql.projects.metio.wtf/configuration/names/batch/?utm_source=atom_feed" rel="related" type="text/html" title="batch"/><link href="https://yosql.projects.metio.wtf/configuration/names/columncount/?utm_source=atom_feed" rel="related" type="text/html" title="columnCount"/><link href="https://yosql.projects.metio.wtf/configuration/names/columnlabel/?utm_source=atom_feed" rel="related" type="text/html" title="columnLabel"/><link href="https://yosql.projects.metio.wtf/configuration/names/connection/?utm_source=atom_feed" rel="related" type="text/html" title="connection"/><id>https://yosql.projects.metio.wtf/configuration/names/statement/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The name for a Statement variable.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../action/">action</a>: The name of an action.</li>
<li><a href="../batch/">batch</a>: The name for a Batch variable.</li>
<li><a href="../columncount/">columnCount</a>: The name for a ColumnCount variable.</li>
<li><a href="../columnlabel/">columnLabel</a>: The name for a ColumnLabel variable.</li>
<li><a href="../connection/">connection</a>: The name for a Connection variable.</li>
<li><a href="../datasource/">dataSource</a>: The name for a DataSource variable.</li>
<li><a href="../databasemetadata/">databaseMetaData</a>: The name for a DatabaseMetaData variable.</li>
<li><a href="../databaseproductname/">databaseProductName</a>: The name of the variable that holds the database product name.</li>
<li><a href="../exception/">exception</a>: The name of an exception.</li>
<li><a href="../executedquery/">executedQuery</a>: The name of SQL statement after parameter replacement.</li>
<li><a href="../indexsuffix/">indexSuffix</a>: The name suffix to add for index lookup tables.</li>
<li><a href="../indexvariable/">indexVariable</a>: The name for a index variable.</li>
<li><a href="../jdbcindexvariable/">jdbcIndexVariable</a>: The name for a JDBC index variable.</li>
<li><a href="../list/">list</a>: The name for a List variable.</li>
<li><a href="../logger/">logger</a>: The name of the logger instance.</li>
<li><a href="../query/">query</a>: The name of selected SQL statement.</li>
<li><a href="../rawquery/">rawQuery</a>: The name of SQL statement before parameter replacement.</li>
<li><a href="../rawsuffix/">rawSuffix</a>: The name suffix to add for raw SQL statements.</li>
<li><a href="../resultset/">resultSet</a>: The name for a ResultSet variable.</li>
<li><a href="../resultsetmetadata/">resultSetMetaData</a>: The name for a ResultSetMetaData variable.</li>
<li><a href="../row/">row</a>: The name for a row variable.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --names-statement<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --statement<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>statement</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">statement</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">names</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">statement</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>statement</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;names&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;statement&gt;</span>configValue<span class="nt">&lt;/statement&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/names&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/names" term="names" label="names"/></entry><entry><title type="html">throwOnMultipleResults</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/throwonmultipleresults/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><id>https://yosql.projects.metio.wtf/configuration/repositories/throwonmultipleresults/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-throw-on-multiple-results<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --throw-on-multiple-results<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>throwOnMultipleResults</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">throwOnMultipleResults</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">throwOnMultipleResults</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>throwOnMultipleResults</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;throwOnMultipleResults&gt;</span>configValue<span class="nt">&lt;/throwOnMultipleResults&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">throwOnMultipleResults</title><link href="https://yosql.projects.metio.wtf/configuration/sql/throwonmultipleresults/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/throwonmultipleresults/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- throwOnMultipleResults: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">type</title><link href="https://yosql.projects.metio.wtf/configuration/sql/type/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/type/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The type of the SQL statement.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- type: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">useFinalClasses</title><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="related" type="text/html" title="apiVersion"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalFields"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalMethods"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalParameters"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalVariables"/><id>https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether classes are declared as final in generated code.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>The default value of the <code>useFinalClasses</code> configuration option is <code>true</code> which enables the use of <code>final</code> for classes.</p>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>Changing the <code>useFinalClasses</code> configuration option to <code>false</code> disables the use of <code>final</code> for classes.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../apiversion/">apiVersion</a>: Controls the Java SDK API version to use in generated code.</li>
<li><a href="../usefinalfields/">useFinalFields</a>: Controls whether fields are declared as final in generated code.</li>
<li><a href="../usefinalmethods/">useFinalMethods</a>: Controls whether methods are declared as final in generated code.</li>
<li><a href="../usefinalparameters/">useFinalParameters</a>: Controls whether parameters are declared as final in generated code.</li>
<li><a href="../usefinalvariables/">useFinalVariables</a>: Controls whether variables are declared as final in generated code.</li>
<li><a href="../usesealedinterfaces/">useSealedInterfaces</a>: Controls whether interfaces should be sealed</li>
<li><a href="../usetextblocks/">useTextBlocks</a>: Controls the usage of text blocks in generated code.</li>
<li><a href="../usevar/">useVar</a>: Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-use-final-classes<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --use-final-classes<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>useFinalClasses</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalClasses</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalClasses</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>useFinalClasses</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;useFinalClasses&gt;</span>configValue<span class="nt">&lt;/useFinalClasses&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">useFinalFields</title><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="related" type="text/html" title="apiVersion"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalClasses"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalMethods"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalParameters"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalVariables"/><id>https://yosql.projects.metio.wtf/configuration/java/usefinalfields/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether fields are declared as final in generated code.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>The default value of the <code>useFinalFields</code> configuration option is <code>true</code> which enables the use of <code>final</code> for fields.</p>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>Changing the <code>useFinalFields</code> configuration option to <code>false</code> disables the use of <code>final</code> for fields.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../apiversion/">apiVersion</a>: Controls the Java SDK API version to use in generated code.</li>
<li><a href="../usefinalclasses/">useFinalClasses</a>: Controls whether classes are declared as final in generated code.</li>
<li><a href="../usefinalmethods/">useFinalMethods</a>: Controls whether methods are declared as final in generated code.</li>
<li><a href="../usefinalparameters/">useFinalParameters</a>: Controls whether parameters are declared as final in generated code.</li>
<li><a href="../usefinalvariables/">useFinalVariables</a>: Controls whether variables are declared as final in generated code.</li>
<li><a href="../usesealedinterfaces/">useSealedInterfaces</a>: Controls whether interfaces should be sealed</li>
<li><a href="../usetextblocks/">useTextBlocks</a>: Controls the usage of text blocks in generated code.</li>
<li><a href="../usevar/">useVar</a>: Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-use-final-fields<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --use-final-fields<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>useFinalFields</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalFields</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalFields</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>useFinalFields</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;useFinalFields&gt;</span>configValue<span class="nt">&lt;/useFinalFields&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">useFinalMethods</title><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="related" type="text/html" title="apiVersion"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalClasses"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalFields"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalParameters"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalVariables"/><id>https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether methods are declared as final in generated code.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>The default value of the <code>useFinalMethods</code> configuration option is <code>true</code> which enables the use of <code>final</code> for methods.</p>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>Changing the <code>useFinalMethods</code> configuration option to <code>false</code> disables the use of <code>final</code> for methods.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../apiversion/">apiVersion</a>: Controls the Java SDK API version to use in generated code.</li>
<li><a href="../usefinalclasses/">useFinalClasses</a>: Controls whether classes are declared as final in generated code.</li>
<li><a href="../usefinalfields/">useFinalFields</a>: Controls whether fields are declared as final in generated code.</li>
<li><a href="../usefinalparameters/">useFinalParameters</a>: Controls whether parameters are declared as final in generated code.</li>
<li><a href="../usefinalvariables/">useFinalVariables</a>: Controls whether variables are declared as final in generated code.</li>
<li><a href="../usesealedinterfaces/">useSealedInterfaces</a>: Controls whether interfaces should be sealed</li>
<li><a href="../usetextblocks/">useTextBlocks</a>: Controls the usage of text blocks in generated code.</li>
<li><a href="../usevar/">useVar</a>: Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-use-final-methods<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --use-final-methods<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>useFinalMethods</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalMethods</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalMethods</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>useFinalMethods</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;useFinalMethods&gt;</span>configValue<span class="nt">&lt;/useFinalMethods&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">useFinalParameters</title><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="related" type="text/html" title="apiVersion"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalClasses"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalFields"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalMethods"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalVariables"/><id>https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether parameters are declared as final in generated code.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>The default value of the <code>useFinalParameters</code> configuration option is <code>true</code> which enables the use of <code>final</code> for parameters.</p>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>Changing the <code>useFinalParameters</code> configuration option to <code>false</code> disables the use of <code>final</code> for parameters.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../apiversion/">apiVersion</a>: Controls the Java SDK API version to use in generated code.</li>
<li><a href="../usefinalclasses/">useFinalClasses</a>: Controls whether classes are declared as final in generated code.</li>
<li><a href="../usefinalfields/">useFinalFields</a>: Controls whether fields are declared as final in generated code.</li>
<li><a href="../usefinalmethods/">useFinalMethods</a>: Controls whether methods are declared as final in generated code.</li>
<li><a href="../usefinalvariables/">useFinalVariables</a>: Controls whether variables are declared as final in generated code.</li>
<li><a href="../usesealedinterfaces/">useSealedInterfaces</a>: Controls whether interfaces should be sealed</li>
<li><a href="../usetextblocks/">useTextBlocks</a>: Controls the usage of text blocks in generated code.</li>
<li><a href="../usevar/">useVar</a>: Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-use-final-parameters<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --use-final-parameters<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>useFinalParameters</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalParameters</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalParameters</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>useFinalParameters</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;useFinalParameters&gt;</span>configValue<span class="nt">&lt;/useFinalParameters&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">useFinalVariables</title><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="related" type="text/html" title="apiVersion"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalClasses"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalFields"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalMethods"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalParameters"/><id>https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether variables are declared as final in generated code.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>The default value of the <code>useFinalVariables</code> configuration option is <code>true</code> which enables the use of <code>final</code> for variables.</p>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>Changing the <code>useFinalVariables</code> configuration option to <code>false</code> disables the use of <code>final</code> for variables.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../apiversion/">apiVersion</a>: Controls the Java SDK API version to use in generated code.</li>
<li><a href="../usefinalclasses/">useFinalClasses</a>: Controls whether classes are declared as final in generated code.</li>
<li><a href="../usefinalfields/">useFinalFields</a>: Controls whether fields are declared as final in generated code.</li>
<li><a href="../usefinalmethods/">useFinalMethods</a>: Controls whether methods are declared as final in generated code.</li>
<li><a href="../usefinalparameters/">useFinalParameters</a>: Controls whether parameters are declared as final in generated code.</li>
<li><a href="../usesealedinterfaces/">useSealedInterfaces</a>: Controls whether interfaces should be sealed</li>
<li><a href="../usetextblocks/">useTextBlocks</a>: Controls the usage of text blocks in generated code.</li>
<li><a href="../usevar/">useVar</a>: Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-use-final-variables<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --use-final-variables<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>useFinalVariables</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalVariables</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useFinalVariables</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>useFinalVariables</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;useFinalVariables&gt;</span>configValue<span class="nt">&lt;/useFinalVariables&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">useSealedInterfaces</title><link href="https://yosql.projects.metio.wtf/configuration/java/usesealedinterfaces/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="related" type="text/html" title="apiVersion"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalClasses"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalFields"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalMethods"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalParameters"/><id>https://yosql.projects.metio.wtf/configuration/java/usesealedinterfaces/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls whether interfaces should be sealed</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>The default value of the <code>useSealedInterfaces</code> configuration option is <code>false</code> which disables sealing interfaces in generated code.</p>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>Changing the <code>useSealedInterfaces</code> configuration option to <code>true</code> enables sealing interfaces in generated code.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../apiversion/">apiVersion</a>: Controls the Java SDK API version to use in generated code.</li>
<li><a href="../usefinalclasses/">useFinalClasses</a>: Controls whether classes are declared as final in generated code.</li>
<li><a href="../usefinalfields/">useFinalFields</a>: Controls whether fields are declared as final in generated code.</li>
<li><a href="../usefinalmethods/">useFinalMethods</a>: Controls whether methods are declared as final in generated code.</li>
<li><a href="../usefinalparameters/">useFinalParameters</a>: Controls whether parameters are declared as final in generated code.</li>
<li><a href="../usefinalvariables/">useFinalVariables</a>: Controls whether variables are declared as final in generated code.</li>
<li><a href="../usetextblocks/">useTextBlocks</a>: Controls the usage of text blocks in generated code.</li>
<li><a href="../usevar/">useVar</a>: Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-use-sealed-interfaces<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --use-sealed-interfaces<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>useSealedInterfaces</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useSealedInterfaces</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useSealedInterfaces</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>useSealedInterfaces</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;useSealedInterfaces&gt;</span>configValue<span class="nt">&lt;/useSealedInterfaces&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">useTextBlocks</title><link href="https://yosql.projects.metio.wtf/configuration/java/usetextblocks/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="related" type="text/html" title="apiVersion"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalClasses"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalFields"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalMethods"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalParameters"/><id>https://yosql.projects.metio.wtf/configuration/java/usetextblocks/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls the usage of text blocks in generated code.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>The default value of the <code>useTextBlocks</code> configuration option is <code>true</code> which enables the use of text blocks in generated code.</p>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>Changing the <code>useTextBlocks</code> configuration option to <code>false</code> disables the use of text blocks in generated code.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../apiversion/">apiVersion</a>: Controls the Java SDK API version to use in generated code.</li>
<li><a href="../usefinalclasses/">useFinalClasses</a>: Controls whether classes are declared as final in generated code.</li>
<li><a href="../usefinalfields/">useFinalFields</a>: Controls whether fields are declared as final in generated code.</li>
<li><a href="../usefinalmethods/">useFinalMethods</a>: Controls whether methods are declared as final in generated code.</li>
<li><a href="../usefinalparameters/">useFinalParameters</a>: Controls whether parameters are declared as final in generated code.</li>
<li><a href="../usefinalvariables/">useFinalVariables</a>: Controls whether variables are declared as final in generated code.</li>
<li><a href="../usesealedinterfaces/">useSealedInterfaces</a>: Controls whether interfaces should be sealed</li>
<li><a href="../usevar/">useVar</a>: Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-use-text-blocks<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --use-text-blocks<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>useTextBlocks</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useTextBlocks</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useTextBlocks</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>useTextBlocks</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;useTextBlocks&gt;</span>configValue<span class="nt">&lt;/useTextBlocks&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">useVar</title><link href="https://yosql.projects.metio.wtf/configuration/java/usevar/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/java/apiversion/?utm_source=atom_feed" rel="related" type="text/html" title="apiVersion"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalClasses"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalfields/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalFields"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalMethods"/><link href="https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/?utm_source=atom_feed" rel="related" type="text/html" title="useFinalParameters"/><id>https://yosql.projects.metio.wtf/configuration/java/usevar/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Controls the usage of the &lsquo;var&rsquo; keyword in generated code.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-true">Option: &rsquo;true&rsquo;</h3>
<p>The default value of the <code>useVar</code> configuration option is <code>true</code> which enables the use of <code>var</code> in generated code.</p>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>Changing the <code>useVar</code> configuration option to <code>false</code> disables the use of <code>var</code> in generated code.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../apiversion/">apiVersion</a>: Controls the Java SDK API version to use in generated code.</li>
<li><a href="../usefinalclasses/">useFinalClasses</a>: Controls whether classes are declared as final in generated code.</li>
<li><a href="../usefinalfields/">useFinalFields</a>: Controls whether fields are declared as final in generated code.</li>
<li><a href="../usefinalmethods/">useFinalMethods</a>: Controls whether methods are declared as final in generated code.</li>
<li><a href="../usefinalparameters/">useFinalParameters</a>: Controls whether parameters are declared as final in generated code.</li>
<li><a href="../usefinalvariables/">useFinalVariables</a>: Controls whether variables are declared as final in generated code.</li>
<li><a href="../usesealedinterfaces/">useSealedInterfaces</a>: Controls whether interfaces should be sealed</li>
<li><a href="../usetextblocks/">useTextBlocks</a>: Controls the usage of text blocks in generated code.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --java-use-var<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --use-var<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>useVar</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useVar</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">useVar</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>useVar</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;java&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;useVar&gt;</span>configValue<span class="nt">&lt;/useVar&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/java&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/java" term="java" label="java"/></entry><entry><title type="html">validateMethodNamePrefixes</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/validatemethodnameprefixes/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedCallPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedReadPrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/?utm_source=atom_feed" rel="related" type="text/html" title="allowedWritePrefixes"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/?utm_source=atom_feed" rel="related" type="text/html" title="basePackageName"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><id>https://yosql.projects.metio.wtf/configuration/repositories/validatemethodnameprefixes/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Validate user given names against list of allowed prefixes per type.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h3 id="option-false">Option: &lsquo;false&rsquo;</h3>
<p>The default value of the <code>validateMethodNamePrefixes</code> configuration option is <code>false</code> which disables the validation of names according to your configured prefixes.</p>
<h3 id="option-true">Option: &rsquo;true'</h3>
<p>Changing the <code>validateMethodNamePrefixes</code> configuration option to <code>true</code> enables the validation of method names.</p>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-validate-method-name-prefixes<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --validate-method-name-prefixes<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>validateMethodNamePrefixes</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">validateMethodNamePrefixes</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">validateMethodNamePrefixes</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>validateMethodNamePrefixes</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;validateMethodNamePrefixes&gt;</span>configValue<span class="nt">&lt;/validateMethodNamePrefixes&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/></entry><entry><title type="html">vendor</title><link href="https://yosql.projects.metio.wtf/configuration/sql/vendor/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/vendor/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>The vendor name of the database the SQL statement is intended for</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../writesreturnupdatecount/">writesReturnUpdateCount</a>: Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- vendor: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">writesReturnUpdateCount</title><link href="https://yosql.projects.metio.wtf/configuration/repositories/writesreturnupdatecount/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchPrefix"/><link href="https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatchSuffix"/><id>https://yosql.projects.metio.wtf/configuration/repositories/writesreturnupdatecount/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../allowedcallprefixes/">allowedCallPrefixes</a>: Configures which name prefixes are allowed for statements that are calling stored procedures.</li>
<li><a href="../allowedreadprefixes/">allowedReadPrefixes</a>: Configures which name prefixes are allowed for statements that are reading data from your database.</li>
<li><a href="../allowedwriteprefixes/">allowedWritePrefixes</a>: Configures which name prefixes are allowed for statements that are writing data to your database.</li>
<li><a href="../basepackagename/">basePackageName</a>: The base package name for all repositories</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../generateinterfaces/">generateInterfaces</a>: Generate interfaces for all repositories</li>
<li><a href="../injectconverters/">injectConverters</a>: Toggles whether converters should be injected as constructor parameters.</li>
<li><a href="../repositoryinterfaceprefix/">repositoryInterfacePrefix</a>: The repository interface name prefix to use.</li>
<li><a href="../repositoryinterfacesuffix/">repositoryInterfaceSuffix</a>: The repository interface name suffix to use.</li>
<li><a href="../repositorynameprefix/">repositoryNamePrefix</a>: The repository name prefix to use.</li>
<li><a href="../repositorynamesuffix/">repositoryNameSuffix</a>: The repository name suffix to use.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../validatemethodnameprefixes/">validateMethodNamePrefixes</a>: Validate user given names against list of allowed prefixes per type.</li>
</ul>
<h2 id="tooling">Tooling</h2>
<h3 id="ant">Ant</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://ant.apache.org/">Ant</a>, take a look at the tooling <a href="/tooling/ant/">documentation for Ant</a>.</p>
<h3 id="bazel">Bazel</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://bazel.build/">Bazel</a>, take a look at the tooling <a href="/tooling/bazel/">documentation for Bazel</a>.</p>
<h3 id="cli">CLI</h3>
<p>In order to use <code>YoSQL</code> on the command line, take a look at the tooling <a href="/tooling/cli/">documentation for CLI</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --repositories-writes-return-update-count<span class="o">=</span>configValue
</span></span></code></pre></div><p>As long as the name of the config option is unique across all configuration groups, you can use the shorter form:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="gp">$</span> yosql --writes-return-update-count<span class="o">=</span>configValue
</span></span></code></pre></div><h3 id="gradle">Gradle</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://gradle.org/">Gradle</a>, take a look at the tooling <a href="/tooling/gradle/">documentation for Gradle</a>. The <code>writesReturnUpdateCount</code> setting can be configured using Gradle in Kotlin syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kotlin" data-lang="kotlin"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">java</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span><span class="p">(</span><span class="s2">&#34;wtf.metio.yosql&#34;</span><span class="p">)</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">writesReturnUpdateCount</span><span class="p">.</span><span class="k">set</span><span class="p">(</span><span class="n">configValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>or in Groovy syntax like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;java&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">id</span> <span class="s2">&#34;wtf.metio.yosql&#34;</span> <span class="n">version</span> <span class="s2">&#34;2023.2.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yosql</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">repositories</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">writesReturnUpdateCount</span> <span class="o">=</span> <span class="n">configValue</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h3 id="maven">Maven</h3>
<p>In order to use <code>YoSQL</code> together with <a href="https://maven.apache.org/">Maven</a>, take a look at the tooling <a href="/tooling/maven/">documentation for Maven</a>. The <code>writesReturnUpdateCount</code> setting can be configured using Maven like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;groupId&gt;</span>wtf.metio.yosql<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;artifactId&gt;</span>yosql-tooling-maven<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;version&gt;</span>2023.2.22<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;repositories&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;writesReturnUpdateCount&gt;</span>configValue<span class="nt">&lt;/writesReturnUpdateCount&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/repositories&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/repositories" term="repositories" label="repositories"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry><entry><title type="html">writesReturnUpdateCount</title><link href="https://yosql.projects.metio.wtf/configuration/sql/writesreturnupdatecount/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://yosql.projects.metio.wtf/configuration/sql/annotations/?utm_source=atom_feed" rel="related" type="text/html" title="annotations"/><link href="https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/?utm_source=atom_feed" rel="related" type="text/html" title="catchAndRethrow"/><link href="https://yosql.projects.metio.wtf/configuration/sql/createconnection/?utm_source=atom_feed" rel="related" type="text/html" title="createConnection"/><link href="https://yosql.projects.metio.wtf/configuration/sql/description/?utm_source=atom_feed" rel="related" type="text/html" title="description"/><link href="https://yosql.projects.metio.wtf/configuration/sql/executebatch/?utm_source=atom_feed" rel="related" type="text/html" title="executeBatch"/><id>https://yosql.projects.metio.wtf/configuration/sql/writesreturnupdatecount/</id><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><content type="html"><![CDATA[<p>Writing method which are using <code>ReturningMode.NONE</code> return the number of affected rows instead.</p>
<h2 id="configuration-options">Configuration Options</h2>
<h2 id="related-options">Related Options</h2>
<ul>
<li><a href="../annotations/">annotations</a>: The additional annotations to be placed on generated methods.</li>
<li><a href="../catchandrethrow/">catchAndRethrow</a>: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions</li>
<li><a href="../createconnection/">createConnection</a>: Controls whether the generated code should create/open connection itself or use a given connection.</li>
<li><a href="../description/">description</a>: The description for the SQL statement</li>
<li><a href="../executebatch/">executeBatch</a>: Generate methods that are executed as batch</li>
<li><a href="../executebatchprefix/">executeBatchPrefix</a>: The method prefix to use for generated methods that execute in a batch.</li>
<li><a href="../executebatchsuffix/">executeBatchSuffix</a>: The method suffix to use for generated methods that execute in a batch.</li>
<li><a href="../executeonce/">executeOnce</a>: Generate methods that are executed once with the given parameters</li>
<li><a href="../executeonceprefix/">executeOncePrefix</a>: The method prefix to use for generated methods that execute once.</li>
<li><a href="../executeoncesuffix/">executeOnceSuffix</a>: The method suffix to use for generated methods that execute once.</li>
<li><a href="../name/">name</a>: The name of the SQL statement</li>
<li><a href="../parameters/">parameters</a>: The parameters of the SQL statement.</li>
<li><a href="../repository/">repository</a>: The fully qualified name of the target repository class.</li>
<li><a href="../resultrowconverter/">resultRowConverter</a>: The alias or fully-qualified name of the converter to use</li>
<li><a href="../returningmode/">returningMode</a>: The returning mode of the SQL statement.</li>
<li><a href="../throwonmultipleresults/">throwOnMultipleResults</a>: Throw an exception in case a statement using <code>ReturningMode.SINGLE</code> produces more than 1 result.</li>
<li><a href="../type/">type</a>: The type of the SQL statement.</li>
<li><a href="../vendor/">vendor</a>: The vendor name of the database the SQL statement is intended for</li>
</ul>
<h2 id="front-matter">Front Matter</h2>
<p>In order to configure this option, place the following code in the front matter of your SQL statement:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- writesReturnUpdateCount: configValue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w">  </span><span class="n">something</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w">    </span><span class="n">your_database_schema</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w">   </span><span class="n">some_column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">:</span><span class="n">some_value</span><span class="w">
</span></span></span></code></pre></div>]]></content><category scheme="https://yosql.projects.metio.wtf/categories/configuration" term="configuration" label="Configuration"/><category scheme="https://yosql.projects.metio.wtf/tags/sql" term="sql" label="sql"/><category scheme="https://yosql.projects.metio.wtf/tags/frontmatter" term="frontmatter" label="frontmatter"/></entry></feed>