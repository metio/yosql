<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration on YoSQL</title><link>https://yosql.projects.metio.wtf/categories/configuration/</link><description>Recent content in Configuration on YoSQL</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 14 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://yosql.projects.metio.wtf/categories/configuration/index.xml" rel="self" type="application/rss+xml"/><item><title>action</title><link>https://yosql.projects.metio.wtf/configuration/names/action/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/action/</guid><description>The name of an action.
Configuration Options Related Options batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>allowedCallPrefixes</title><link>https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/</guid><description>Configures which name prefixes are allowed for statements that are calling stored procedures.
Configuration Options Option: &amp;lsquo;call, execute, evaluate, eval&amp;rsquo; The default value of the allowedCallPrefixes configuration option is call, execute, evaluate, eval to allow several commonly used names for calling procedures.
Option: &amp;lsquo;do&amp;rsquo; Changing the allowedCallPrefixes configuration option to do only allows names with the prefix do to call stored procedures.
Related Options allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database.</description></item><item><title>allowedReadPrefixes</title><link>https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/</guid><description>Configures which name prefixes are allowed for statements that are reading data from your database.
Configuration Options Option: &amp;lsquo;read, select, find, query, lookup, get&amp;rsquo; The default value of the allowedReadPrefixes configuration option is read, select, find, query, lookup, get to allow several commonly used names for reading statements.
Option: &amp;rsquo;lego' Changing the allowedReadPrefixes configuration option to lego only allows names with the prefix lego to read data.
Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures.</description></item><item><title>allowedWritePrefixes</title><link>https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/</guid><description>Configures which name prefixes are allowed for statements that are writing data to your database.
Configuration Options Option: &amp;lsquo;update, insert, delete, create, write, add, remove, merge, drop&amp;rsquo; The default value of the allowedWritePrefixes configuration option is update, insert, delete, create, write, add, remove, merge, drop to allow several commonly used names for writing statements.
Option: &amp;lsquo;scribo&amp;rsquo; Changing the allowedWritePrefixes configuration option to scribo only allows names with the prefix scribo to write data.</description></item><item><title>annotateClasses</title><link>https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/annotateclasses/</guid><description>Controls whether Generated annotations should be added to the generated classes.
Configuration Options Option: &amp;lsquo;false&amp;rsquo; The default value of the annotateClasses configuration option is false. Setting the option to false therefore produces the same code generated as the default configuration.
package com.example.persistence; public class SomeRepository { // ... rest of generated code } Option: &amp;rsquo;true' Changing the annotateClasses configuration option to true adds the @Generated annotation to every generated classes. Its is possible to configure each value individually using other config options.</description></item><item><title>annotateFields</title><link>https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/annotatefields/</guid><description>Controls whether Generated annotations should be added to the generated fields.
Configuration Options Option: &amp;lsquo;false&amp;rsquo; The default value of the annotateFields configuration option is false. Setting the option to false therefore produces the same code generated as the default configuration.
package com.example.persistence; public class SomeRepository { private Object someField; // ... rest of generated code } Option: &amp;rsquo;true' Changing the annotateFields configuration option to true adds the @Generated annotation to every generated fields.</description></item><item><title>annotateMethods</title><link>https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/annotatemethods/</guid><description>Controls whether Generated annotations should be added to the generated methods.
Configuration Options Option: &amp;lsquo;false&amp;rsquo; The default value of the annotateMethods configuration option is false. Setting the option to false therefore produces the same code generated as the default configuration.
package com.example.persistence; public class SomeRepository { public void someMethod() { // ... some code } // ... rest of generated code } Option: &amp;rsquo;true' Changing the annotateMethods configuration option to true adds the @Generated annotation to every generated methods.</description></item><item><title>annotationApi</title><link>https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/annotationapi/</guid><description>The annotation API to use.
Configuration Options Option: &amp;lsquo;PROCESSING_API&amp;rsquo; The default value of the annotationApi configuration option is PROCESSING_API. Setting the option to PROCESSING_API therefore produces the same code generated as the default configuration.
package com.example.persistence; import javax.annotation.processing.Generated; @Generated( value = &amp;#34;YoSQL&amp;#34;, date = &amp;#34;&amp;lt;current_timestamp&amp;gt;&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) public class SomeRepository { @Generated( value = &amp;#34;YoSQL&amp;#34;, date = &amp;#34;&amp;lt;current_timestamp&amp;gt;&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) private Object someField; @Generated( value = &amp;#34;YoSQL&amp;#34;, date = &amp;#34;&amp;lt;current_timestamp&amp;gt;&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) public void someMethod() { // .</description></item><item><title>annotations</title><link>https://yosql.projects.metio.wtf/configuration/sql/annotations/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/annotations/</guid><description>The additional annotations to be placed on generated methods.
This list is empty by default and thus no annotations are added to generated methods.
Configuration Options Option: &amp;lsquo;your.own.Annotation&amp;rsquo; In order to add an annotation to the generated methods, specify its fully-qualified name.
package com.example.persistence; import your.own.Annotation; public class SomeRepository { @Annotation public void someMethod() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;your.other.Annotation&amp;rsquo; In order to add an annotation with some member, specify name of the annotation member, its value, and its type.</description></item><item><title>Annotations</title><link>https://yosql.projects.metio.wtf/configuration/annotations/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/</guid><description>Configures how annotations are applied to the generated code.</description></item><item><title>api</title><link>https://yosql.projects.metio.wtf/configuration/logging/api/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/logging/api/</guid><description>The logging API to use.
Configuration Options Option: &amp;lsquo;NONE&amp;rsquo; The default no-op implementation for a logging generator. It won&amp;rsquo;t generate any logging statements in your generated code.
Option: &amp;lsquo;JUL&amp;rsquo; The java.util.logging based implementation for a logging generator. The generated code does not require any external non-JDK classes. All loggers use the basePackageName as their base name.
Option: &amp;lsquo;LOG4J&amp;rsquo; The log4j based implementation for a logging generator. All loggers use the basePackageName as their base name.</description></item><item><title>apiVersion</title><link>https://yosql.projects.metio.wtf/configuration/java/apiversion/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/apiversion/</guid><description>Controls the Java SDK API version to use in generated code.
Configuration Options Option: &amp;lsquo;17&amp;rsquo; The default value of the apiVersion configuration option is 17. It is updated alongside the minimum Java version required by YoSQL.
Option: &amp;lsquo;11&amp;rsquo; Changing the apiVersion configuration option to 11 will allow generated code to use Java APIs up until version 11 (including).
Related Options useFinalClasses: Controls whether classes are declared as final in generated code.</description></item><item><title>basePackageName</title><link>https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/</guid><description>The base package name for all repositories
Configuration Options Option: &amp;lsquo;com.example.persistence&amp;rsquo; The default value of the basePackageName configuration option is com.example.persistence. Setting the option to com.example.persistence therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:
package com.example.persistence; public class SomeRepository { // ... rest of generated code } Option: &amp;lsquo;your.own.domain&amp;rsquo; Changing the basePackageName configuration option to your.own.domain generates the following code instead:</description></item><item><title>batch</title><link>https://yosql.projects.metio.wtf/configuration/names/batch/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/batch/</guid><description>The name for a Batch variable.
Configuration Options Related Options action: The name of an action. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>catchAndRethrow</title><link>https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/</guid><description>Catch exceptions during SQL execution and re-throw them as RuntimeExceptions
Configuration Options Option: &amp;rsquo;true' The default value for catchAndRethrow is true. This will catch any SQLException that happen during SQL execution and re-throw them as RuntimeExceptions.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;false&amp;rsquo; In case you want to handle SQLExceptions yourself, set catchAndRethrow to false.</description></item><item><title>catchAndRethrow</title><link>https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/catchandrethrow/</guid><description>Catch exceptions during SQL execution and re-throw them as RuntimeExceptions
Configuration Options Option: &amp;rsquo;true' The default value for catchAndRethrow is true. This will catch any SQLException that happen during SQL execution and re-throw them as RuntimeExceptions.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;false&amp;rsquo; In case you want to handle SQLExceptions yourself, set catchAndRethrow to false.</description></item><item><title>classComment</title><link>https://yosql.projects.metio.wtf/configuration/annotations/classcomment/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/classcomment/</guid><description>Sets the comment used for annotated classes.
Configuration Options Option: &amp;lsquo;DO NOT MODIFY - automatically generated by YoSQL&amp;rsquo; The default value of the classComment configuration option is DO NOT MODIFY - automatically generated by YoSQL. Setting the option to PROCESSING_API therefore produces the same code generated as the default configuration.
package com.example.persistence; import javax.annotation.processing.Generated; @Generated( value = &amp;#34;YoSQL&amp;#34;, date = &amp;#34;&amp;lt;current_timestamp&amp;gt;&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) public class SomeRepository { // .</description></item><item><title>classMembers</title><link>https://yosql.projects.metio.wtf/configuration/annotations/classmembers/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/classmembers/</guid><description>The annotation members to use for classes.
Configuration Options Option: &amp;lsquo;WITHOUT_DATE&amp;rsquo; The default value of the classMembers configuration option is WITHOUT_DATE. Setting the option to WITHOUT_DATE therefore produces the same code generated as the default configuration.
package com.example.persistence; import javax.annotation.processing.Generated; @Generated( value = &amp;#34;YoSQL&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) public class SomeRepository { // ... rest of generated code } Option: &amp;lsquo;ALL&amp;rsquo; Changing the classMembers configuration option to ALL outputs all annotation members.</description></item><item><title>columnCount</title><link>https://yosql.projects.metio.wtf/configuration/names/columncount/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/columncount/</guid><description>The name for a ColumnCount variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>columnLabel</title><link>https://yosql.projects.metio.wtf/configuration/names/columnlabel/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/columnlabel/</guid><description>The name for a ColumnLabel variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>connection</title><link>https://yosql.projects.metio.wtf/configuration/names/connection/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/connection/</guid><description>The name for a Connection variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>constructorAnnotations</title><link>https://yosql.projects.metio.wtf/configuration/annotations/constructorannotations/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/constructorannotations/</guid><description>The additional annotations to be placed on generated constructors.
Configuration Options Related Options annotateClasses: Controls whether Generated annotations should be added to the generated classes. annotateFields: Controls whether Generated annotations should be added to the generated fields. annotateMethods: Controls whether Generated annotations should be added to the generated methods. annotationApi: The annotation API to use. classComment: Sets the comment used for annotated classes. classMembers: The annotation members to use for classes.</description></item><item><title>Converter</title><link>https://yosql.projects.metio.wtf/configuration/converter/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/converter/</guid><description>Configures converter related settings.</description></item><item><title>createConnection</title><link>https://yosql.projects.metio.wtf/configuration/repositories/createconnection/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/createconnection/</guid><description>Controls whether the generated code should create/open connection itself or use a given connection.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>createConnection</title><link>https://yosql.projects.metio.wtf/configuration/sql/createconnection/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/createconnection/</guid><description>Controls whether the generated code should create/open connection itself or use a given connection.
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch. executeBatchSuffix: The method suffix to use for generated methods that execute in a batch.</description></item><item><title>databaseMetaData</title><link>https://yosql.projects.metio.wtf/configuration/names/databasemetadata/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/databasemetadata/</guid><description>The name for a DatabaseMetaData variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>databaseProductName</title><link>https://yosql.projects.metio.wtf/configuration/names/databaseproductname/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/databaseproductname/</guid><description>The name of the variable that holds the database product name.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. exception: The name of an exception. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>dataSource</title><link>https://yosql.projects.metio.wtf/configuration/names/datasource/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/datasource/</guid><description>The name for a DataSource variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>defaultConverter</title><link>https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/converter/defaultconverter/</guid><description>The default converter to use, if no other is specified on a query itself.
Configuration Options Related Options generateMapConverter: Whether the ToMap converter should be generated. mapConverterAlias: The name of the alias referencing the ToMap converter. mapConverterClass: The fully-qualified class name of the ToMap converter. mapConverterMethod: The name of the method to generate/call in the ToMap converter. rowConverters: The converters configured by the user. Tooling Ant In order to use YoSQL together with Ant, take a look at the tooling documentation for Ant.</description></item><item><title>description</title><link>https://yosql.projects.metio.wtf/configuration/sql/description/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/description/</guid><description>The description for the SQL statement
Configuration Options Option: &amp;lsquo;Some random description&amp;rsquo; In case you use the description option, YoSQL will use the supplied value as a JavaDoc comment
package com.example.persistence; public class SomeRepository { /** * Some random description */ public void someMethod() { // ... some code } // ... rest of generated code } Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>exception</title><link>https://yosql.projects.metio.wtf/configuration/names/exception/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/exception/</guid><description>The name of an exception.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. executedQuery: The name of SQL statement after parameter replacement.</description></item><item><title>executeBatch</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executebatch/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executebatch/</guid><description>Generate methods that are executed as batch
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>executeBatch</title><link>https://yosql.projects.metio.wtf/configuration/sql/executebatch/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/executebatch/</guid><description>Generate methods that are executed as batch
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatchPrefix: The method prefix to use for generated methods that execute in a batch. executeBatchSuffix: The method suffix to use for generated methods that execute in a batch.</description></item><item><title>executeBatchPrefix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/</guid><description>The method prefix to use for generated methods that execute in a batch.
Configuration Options Option: '' The default value for executeBatchPrefix is the empty string. It does not add any prefix in front of batch methods.
package com.example.persistence; public class SomeRepository { public void writeSomeBatch() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;myPrefix&amp;rsquo; In case you want to prefix batch methods with something, set the executeBatchPrefix option.</description></item><item><title>executeBatchPrefix</title><link>https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/executebatchprefix/</guid><description>The method prefix to use for generated methods that execute in a batch.
Configuration Options Option: '' The default value for executeBatchPrefix is the empty string. It does not add any prefix in front of batch methods.
package com.example.persistence; public class SomeRepository { public void writeSomeBatch() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;myPrefix&amp;rsquo; In case you want to prefix batch methods with something, set the executeBatchPrefix option.</description></item><item><title>executeBatchSuffix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/</guid><description>The method suffix to use for generated methods that execute in a batch.
Configuration Options Option: &amp;lsquo;Batch&amp;rsquo; The default value for executeBatchSuffix is &amp;lsquo;Batch&amp;rsquo;. It adds the word &amp;lsquo;Batch&amp;rsquo; after each batch method.
package com.example.persistence; public class SomeRepository { public void writeSomeBatch() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;Other&amp;rsquo; In case you want to suffix batch methods with something else, set the executeBatchSuffix option.</description></item><item><title>executeBatchSuffix</title><link>https://yosql.projects.metio.wtf/configuration/sql/executebatchsuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/executebatchsuffix/</guid><description>The method suffix to use for generated methods that execute in a batch.
Configuration Options Option: &amp;lsquo;Batch&amp;rsquo; The default value for executeBatchSuffix is &amp;lsquo;Batch&amp;rsquo;. It adds the word &amp;lsquo;Batch&amp;rsquo; after each batch method.
package com.example.persistence; public class SomeRepository { public void writeSomeBatch() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;Other&amp;rsquo; In case you want to suffix batch methods with something else, set the executeBatchSuffix option.</description></item><item><title>executedQuery</title><link>https://yosql.projects.metio.wtf/configuration/names/executedquery/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/executedquery/</guid><description>The name of SQL statement after parameter replacement.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name.</description></item><item><title>executeOnce</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executeonce/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executeonce/</guid><description>Generate methods that are executed once with the given parameters
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>executeOnce</title><link>https://yosql.projects.metio.wtf/configuration/sql/executeonce/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/executeonce/</guid><description>Generate methods that are executed once with the given parameters
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>executeOncePrefix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executeonceprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executeonceprefix/</guid><description>The method prefix to use for generated methods that execute once.
Configuration Options Option: '' The default value for executeOncePrefix is the empty string. It does not add any prefix in front of methods that are executed once.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;myPrefix&amp;rsquo; In case you want to prefix methods that execute once with something, set the executeOncePrefix option.</description></item><item><title>executeOncePrefix</title><link>https://yosql.projects.metio.wtf/configuration/sql/executeonceprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/executeonceprefix/</guid><description>The method prefix to use for generated methods that execute once.
Configuration Options Option: '' The default value for executeOncePrefix is the empty string. It does not add any prefix in front of methods that are executed once.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;myPrefix&amp;rsquo; In case you want to prefix methods that execute once with something, set the executeOncePrefix option.</description></item><item><title>executeOnceSuffix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executeoncesuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executeoncesuffix/</guid><description>The method suffix to use for generated methods that execute once.
Configuration Options Option: '' The default value for executeOnceSuffix is the empty string. It does not add any suffix after methods that execute once.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;mySuffix&amp;rsquo; In case you want to suffix methods that execute once with something, set the executeOnceSuffix option.</description></item><item><title>executeOnceSuffix</title><link>https://yosql.projects.metio.wtf/configuration/sql/executeoncesuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/executeoncesuffix/</guid><description>The method suffix to use for generated methods that execute once.
Configuration Options Option: '' The default value for executeOnceSuffix is the empty string. It does not add any suffix after methods that execute once.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;mySuffix&amp;rsquo; In case you want to suffix methods that execute once with something, set the executeOnceSuffix option.</description></item><item><title>fieldComment</title><link>https://yosql.projects.metio.wtf/configuration/annotations/fieldcomment/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/fieldcomment/</guid><description>Sets the comment used for annotated fields.
Configuration Options Option: &amp;lsquo;DO NOT MODIFY - automatically generated by YoSQL&amp;rsquo; The default value of the fieldComment configuration option is DO NOT MODIFY - automatically generated by YoSQL. Setting the option to DO NOT MODIFY - automatically generated by YoSQL therefore produces the same code generated as the default configuration.
package com.example.persistence; import javax.annotation.processing.Generated; public class SomeRepository { @Generated( value = &amp;#34;YoSQL&amp;#34;, date = &amp;#34;&amp;lt;current_timestamp&amp;gt;&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) private Object someField; // .</description></item><item><title>fieldMembers</title><link>https://yosql.projects.metio.wtf/configuration/annotations/fieldmembers/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/fieldmembers/</guid><description>The annotation members to use for fields.
Configuration Options Option: &amp;lsquo;WITHOUT_DATE&amp;rsquo; The default value of the fieldMembers configuration option is WITHOUT_DATE. Setting the option to WITHOUT_DATE therefore produces the same code generated as the default configuration.
package com.example.persistence; import javax.annotation.processing.Generated; public class SomeRepository { @Generated( value = &amp;#34;YoSQL&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) private Object someField; // ... rest of generated code } Option: &amp;lsquo;ALL&amp;rsquo; Changing the fieldMembers configuration option to ALL outputs all annotation members.</description></item><item><title>Files</title><link>https://yosql.projects.metio.wtf/configuration/files/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/files/</guid><description>Configures how files are handled.</description></item><item><title>generateInterfaces</title><link>https://yosql.projects.metio.wtf/configuration/repositories/generateinterfaces/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/generateinterfaces/</guid><description>Generate interfaces for all repositories
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>generateMapConverter</title><link>https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/converter/generatemapconverter/</guid><description>Whether the ToMap converter should be generated.
Configuration Options Related Options defaultConverter: The default converter to use, if no other is specified on a query itself. mapConverterAlias: The name of the alias referencing the ToMap converter. mapConverterClass: The fully-qualified class name of the ToMap converter. mapConverterMethod: The name of the method to generate/call in the ToMap converter. rowConverters: The converters configured by the user. Tooling Ant In order to use YoSQL together with Ant, take a look at the tooling documentation for Ant.</description></item><item><title>generatorName</title><link>https://yosql.projects.metio.wtf/configuration/annotations/generatorname/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/generatorname/</guid><description>The name of the code generator
Configuration Options Option: &amp;lsquo;YoSQL&amp;rsquo; The default value of the generatorName configuration option is YoSQL. Setting the option to YoSQL therefore produces the same code generated as the default configuration.
package com.example.persistence; import javax.annotation.processing.Generated; public class SomeRepository { @Generated( value = &amp;#34;YoSQL&amp;#34;, date = &amp;#34;&amp;lt;current_timestamp&amp;gt;&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) private Object someField; // ... rest of generated code } Option: &amp;lsquo;Hello World!</description></item><item><title>indexSuffix</title><link>https://yosql.projects.metio.wtf/configuration/names/indexsuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/indexsuffix/</guid><description>The name suffix to add for index lookup tables.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name.</description></item><item><title>indexVariable</title><link>https://yosql.projects.metio.wtf/configuration/names/indexvariable/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/indexvariable/</guid><description>The name for a index variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception.</description></item><item><title>injectConverters</title><link>https://yosql.projects.metio.wtf/configuration/repositories/injectconverters/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/injectconverters/</guid><description>Toggles whether converters should be injected as constructor parameters.
Configuration Options Option: &amp;lsquo;false&amp;rsquo; The default value of the injectConverters configuration option is false. It produces code similar to this:
package com.example.persistence; public class SomeRepository { private final DataSource dataSource; private final ToMapConverter toMap; public SomeRepository(final DataSource dataSource) { this.dataSource = dataSource; this.toMap = new ToMapConverter(); } // ... rest of generated code } Option: &amp;rsquo;true' Changing the injectConverters configuration option to true generates the following code instead:</description></item><item><title>inputBaseDirectory</title><link>https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/files/inputbasedirectory/</guid><description>The input directory for the user written SQL files.
Configuration Options Option: &amp;lsquo;.&amp;rsquo; The default value of the inputBaseDirectory configuration option used by the Ant- and CLI-tooling is . - the current directory.
Option: &amp;lsquo;src/main/yosql&amp;rsquo; The default value of the inputBaseDirectory configuration option used by the Gradle- and Maven-tooling is src/main/yosql to better reflect the commonly used project structure expected by those tools.
Option: &amp;lsquo;some/other/directory&amp;rsquo; Changing the inputBaseDirectory configuration option to some/other/directory!</description></item><item><title>Java</title><link>https://yosql.projects.metio.wtf/configuration/java/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/</guid><description>Configures Java version and related settings.</description></item><item><title>jdbcIndexVariable</title><link>https://yosql.projects.metio.wtf/configuration/names/jdbcindexvariable/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/jdbcindexvariable/</guid><description>The name for a JDBC index variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name.</description></item><item><title>list</title><link>https://yosql.projects.metio.wtf/configuration/names/list/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/list/</guid><description>The name for a List variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception.</description></item><item><title>logger</title><link>https://yosql.projects.metio.wtf/configuration/names/logger/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/logger/</guid><description>The name of the logger instance.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception.</description></item><item><title>Logging</title><link>https://yosql.projects.metio.wtf/configuration/logging/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/logging/</guid><description>Configures log statements in generated code.</description></item><item><title>mapConverterAlias</title><link>https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/converter/mapconverteralias/</guid><description>The name of the alias referencing the ToMap converter.
Configuration Options Related Options defaultConverter: The default converter to use, if no other is specified on a query itself. generateMapConverter: Whether the ToMap converter should be generated. mapConverterClass: The fully-qualified class name of the ToMap converter. mapConverterMethod: The name of the method to generate/call in the ToMap converter. rowConverters: The converters configured by the user. Tooling Ant In order to use YoSQL together with Ant, take a look at the tooling documentation for Ant.</description></item><item><title>mapConverterClass</title><link>https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/converter/mapconverterclass/</guid><description>The fully-qualified class name of the ToMap converter.
Configuration Options Related Options defaultConverter: The default converter to use, if no other is specified on a query itself. generateMapConverter: Whether the ToMap converter should be generated. mapConverterAlias: The name of the alias referencing the ToMap converter. mapConverterMethod: The name of the method to generate/call in the ToMap converter. rowConverters: The converters configured by the user. Tooling Ant In order to use YoSQL together with Ant, take a look at the tooling documentation for Ant.</description></item><item><title>mapConverterMethod</title><link>https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/converter/mapconvertermethod/</guid><description>The name of the method to generate/call in the ToMap converter.
Configuration Options Related Options defaultConverter: The default converter to use, if no other is specified on a query itself. generateMapConverter: Whether the ToMap converter should be generated. mapConverterAlias: The name of the alias referencing the ToMap converter. mapConverterClass: The fully-qualified class name of the ToMap converter. rowConverters: The converters configured by the user. Tooling Ant In order to use YoSQL together with Ant, take a look at the tooling documentation for Ant.</description></item><item><title>maxThreads</title><link>https://yosql.projects.metio.wtf/configuration/resources/maxthreads/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/resources/maxthreads/</guid><description>Controls how many threads are used during code generation.
The maximum number will be capped to the number of available CPU cores of your system.
Configuration Options Option: &amp;lsquo;1&amp;rsquo; The default value of the maxThreads configuration option is 1 which uses one thread to generate code.
Option: &amp;lsquo;123&amp;rsquo; Changing the maxThreads configuration option to 123 will use the available number of CPU cores in your system or 123 threads, depending on which is lower.</description></item><item><title>methodAnnotations</title><link>https://yosql.projects.metio.wtf/configuration/annotations/methodannotations/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/methodannotations/</guid><description>The additional annotations to be placed on generated methods.
Configuration Options Related Options annotateClasses: Controls whether Generated annotations should be added to the generated classes. annotateFields: Controls whether Generated annotations should be added to the generated fields. annotateMethods: Controls whether Generated annotations should be added to the generated methods. annotationApi: The annotation API to use. classComment: Sets the comment used for annotated classes. classMembers: The annotation members to use for classes.</description></item><item><title>methodComment</title><link>https://yosql.projects.metio.wtf/configuration/annotations/methodcomment/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/methodcomment/</guid><description>Sets the comment used for annotated methods.
Configuration Options Option: &amp;lsquo;DO NOT MODIFY - automatically generated by YoSQL&amp;rsquo; The default value of the methodComment configuration option is DO NOT MODIFY - automatically generated by YoSQL. Setting the option to DO NOT MODIFY - automatically generated by YoSQL therefore produces the same code generated as the default configuration.
package com.example.persistence; import javax.annotation.processing.Generated; public class SomeRepository { @Generated( value = &amp;#34;YoSQL&amp;#34;, date = &amp;#34;&amp;lt;current_timestamp&amp;gt;&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) public void someMethod() { // .</description></item><item><title>methodMembers</title><link>https://yosql.projects.metio.wtf/configuration/annotations/methodmembers/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/methodmembers/</guid><description>The annotation members to use for methods.
Configuration Options Option: &amp;lsquo;WITHOUT_DATE&amp;rsquo; The default value of the methodMembers configuration option is WITHOUT_DATE. Setting the option to WITHOUT_DATE therefore produces the same code generated as the default configuration.
package com.example.persistence; import javax.annotation.processing.Generated; public class SomeRepository { @Generated( value = &amp;#34;YoSQL&amp;#34;, comments = &amp;#34;DO NOT MODIFY - automatically generated by YoSQL&amp;#34; ) public void someMethod() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;ALL&amp;rsquo; Changing the methodMembers configuration option to ALL outputs all annotation members.</description></item><item><title>name</title><link>https://yosql.projects.metio.wtf/configuration/sql/name/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/name/</guid><description>The name of the SQL statement
Configuration Options Option: &amp;lsquo;yourSpecialName&amp;rsquo; In case you use the name option, YoSQL will use the supplied value as a method name
package com.example.persistence; public class SomeRepository { public void yourSpecialName() { // ... some code } // ... rest of generated code } Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>Names</title><link>https://yosql.projects.metio.wtf/configuration/names/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/</guid><description>Configures the names of variables in generated code.</description></item><item><title>outputBaseDirectory</title><link>https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/files/outputbasedirectory/</guid><description>The output directory for the generated classes.
Configuration Options Option: &amp;lsquo;.&amp;rsquo; The default value of the outputBaseDirectory configuration option is . - the current directory. Note that tooling may change the default output base directory to better reflect a typical project structure used with such a tool.
Option: &amp;lsquo;some/other/directory&amp;rsquo; Changing the outputBaseDirectory configuration option to some/other/directory! configures YoSQL to write into the relative directorysome/other/directory.
Option: &amp;lsquo;/an/absolute/path&amp;rsquo; Changing the outputBaseDirectory configuration option to /an/absolute/path!</description></item><item><title>parameters</title><link>https://yosql.projects.metio.wtf/configuration/sql/parameters/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/parameters/</guid><description>The parameters of the SQL statement.
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>query</title><link>https://yosql.projects.metio.wtf/configuration/names/query/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/query/</guid><description>The name of selected SQL statement.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception.</description></item><item><title>rawQuery</title><link>https://yosql.projects.metio.wtf/configuration/names/rawquery/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/rawquery/</guid><description>The name of SQL statement before parameter replacement.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name.</description></item><item><title>rawSuffix</title><link>https://yosql.projects.metio.wtf/configuration/names/rawsuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/rawsuffix/</guid><description>The name suffix to add for raw SQL statements.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name.</description></item><item><title>Repositories</title><link>https://yosql.projects.metio.wtf/configuration/repositories/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/</guid><description>The repositories configuration can be used to control how YoSQL outputs repositories.</description></item><item><title>repository</title><link>https://yosql.projects.metio.wtf/configuration/sql/repository/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/repository/</guid><description>The fully qualified name of the target repository class.
In order to overwrite the target repository of a single SQL statement, use the repository option. You can specify the fully qualified name of the repository that should contain your statement, or you can just specify the name of the class and YoSQL will automatically add the base package name as well as the repositoryNamePrefix and repositoryNameSuffix for you.
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods.</description></item><item><title>repositoryAnnotations</title><link>https://yosql.projects.metio.wtf/configuration/annotations/repositoryannotations/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/annotations/repositoryannotations/</guid><description>The additional annotations to be placed on generated repository classes.
Configuration Options Related Options annotateClasses: Controls whether Generated annotations should be added to the generated classes. annotateFields: Controls whether Generated annotations should be added to the generated fields. annotateMethods: Controls whether Generated annotations should be added to the generated methods. annotationApi: The annotation API to use. classComment: Sets the comment used for annotated classes. classMembers: The annotation members to use for classes.</description></item><item><title>repositoryInterfacePrefix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfaceprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfaceprefix/</guid><description>The repository interface name prefix to use.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>repositoryInterfaceSuffix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfacesuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfacesuffix/</guid><description>The repository interface name suffix to use.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>repositoryNamePrefix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/repositorynameprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/repositorynameprefix/</guid><description>The repository name prefix to use.
In case the repository name already contains the configured prefix, it will not be added twice.
Configuration Options Option: '' The default value of the repositoryNamePrefix configuration option is the empty string. Setting the option to `` therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:
package com.example.persistence; public class SomeRepository { // .</description></item><item><title>repositoryNameSuffix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/repositorynamesuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/repositorynamesuffix/</guid><description>The repository name suffix to use.
In case the repository name already contains the configured suffix, it will not be added twice.
Configuration Options Option: &amp;lsquo;Repository&amp;rsquo; The default value of the repositoryNameSuffix configuration option is Repository. Setting the option to Repository therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:
package com.example.persistence; public class SomeRepository { // ... rest of generated code } Option: &amp;lsquo;Repo&amp;rsquo; Changing the repositoryNameSuffix configuration option to Repo generates the following code instead:</description></item><item><title>Resources</title><link>https://yosql.projects.metio.wtf/configuration/resources/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/resources/</guid><description>Configures resource usage and other related settings</description></item><item><title>resultRowConverter</title><link>https://yosql.projects.metio.wtf/configuration/sql/resultrowconverter/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/resultrowconverter/</guid><description>The alias or fully-qualified name of the converter to use
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>resultSet</title><link>https://yosql.projects.metio.wtf/configuration/names/resultset/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/resultset/</guid><description>The name for a ResultSet variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception.</description></item><item><title>resultSetMetaData</title><link>https://yosql.projects.metio.wtf/configuration/names/resultsetmetadata/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/resultsetmetadata/</guid><description>The name for a ResultSetMetaData variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception.</description></item><item><title>returningMode</title><link>https://yosql.projects.metio.wtf/configuration/sql/returningmode/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/returningmode/</guid><description>The returning mode of the SQL statement.
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>row</title><link>https://yosql.projects.metio.wtf/configuration/names/row/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/row/</guid><description>The name for a row variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception.</description></item><item><title>rowConverters</title><link>https://yosql.projects.metio.wtf/configuration/converter/rowconverters/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/converter/rowconverters/</guid><description>The converters configured by the user.
Configuration Options Related Options defaultConverter: The default converter to use, if no other is specified on a query itself. generateMapConverter: Whether the ToMap converter should be generated. mapConverterAlias: The name of the alias referencing the ToMap converter. mapConverterClass: The fully-qualified class name of the ToMap converter. mapConverterMethod: The name of the method to generate/call in the ToMap converter. Tooling Ant In order to use YoSQL together with Ant, take a look at the tooling documentation for Ant.</description></item><item><title>skipLines</title><link>https://yosql.projects.metio.wtf/configuration/files/skiplines/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/files/skiplines/</guid><description>The number of lines to skip in each file (e.g. a copyright header).
Configuration Options Option: &amp;lsquo;0&amp;rsquo; The default value of the skipLines configuration option is 0 - which does not skip any lines.
Option: &amp;lsquo;0&amp;rsquo; Changing the skipLines configuration option to 5 configures YoSQL skip the first 5 lines in each .sql file in encounters.
Related Options inputBaseDirectory: The input directory for the user written SQL files. outputBaseDirectory: The output directory for the generated classes.</description></item><item><title>Sql</title><link>https://yosql.projects.metio.wtf/configuration/sql/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/</guid><description>The configuration for a single SQL statement.
All of these options are to be placed in the front matter of SQL statements and their overwrite their respective counterparts in the global configuration, e.g. in repositories.</description></item><item><title>sqlFilesCharset</title><link>https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/files/sqlfilescharset/</guid><description>The charset to use while reading .sql files.
Configuration Options Option: &amp;lsquo;UTF-8&amp;rsquo; The default value of the sqlFilesCharset configuration option is UTF-8 which should work on most systems.
Option: &amp;lsquo;ISO-8859-1&amp;rsquo; Changing the sqlFilesCharset configuration option to ISO-8859-1 configures YoSQL to use the ISO-8859-1 charset while reading your .sql files.
Related Options inputBaseDirectory: The input directory for the user written SQL files. outputBaseDirectory: The output directory for the generated classes. skipLines: The number of lines to skip in each file (e.</description></item><item><title>sqlFilesSuffix</title><link>https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/files/sqlfilessuffix/</guid><description>The file ending to use while searching for SQL files.
Configuration Options Option: &amp;lsquo;.sql&amp;rsquo; The default value of the sqlFilesSuffix configuration option is .sql. It matches all files that end with .sql.
Option: &amp;lsquo;.other&amp;rsquo; Changing the sqlFilesSuffix configuration option to .other configures YoSQL look for files that end in .other.
Related Options inputBaseDirectory: The input directory for the user written SQL files. outputBaseDirectory: The output directory for the generated classes. skipLines: The number of lines to skip in each file (e.</description></item><item><title>sqlStatementSeparator</title><link>https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/files/sqlstatementseparator/</guid><description>The separator to split SQL statements inside a single .sql file.
Configuration Options Option: &amp;lsquo;;&amp;rsquo; The default value of the sqlStatementSeparator configuration option is .sql. It matches all files that end with .sql.
Option: &amp;lsquo;|&amp;rsquo; Changing the sqlStatementSeparator configuration option to | configures YoSQL split .sql files using the | character.
Related Options inputBaseDirectory: The input directory for the user written SQL files. outputBaseDirectory: The output directory for the generated classes.</description></item><item><title>statement</title><link>https://yosql.projects.metio.wtf/configuration/names/statement/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/names/statement/</guid><description>The name for a Statement variable.
Configuration Options Related Options action: The name of an action. batch: The name for a Batch variable. columnCount: The name for a ColumnCount variable. columnLabel: The name for a ColumnLabel variable. connection: The name for a Connection variable. dataSource: The name for a DataSource variable. databaseMetaData: The name for a DatabaseMetaData variable. databaseProductName: The name of the variable that holds the database product name. exception: The name of an exception.</description></item><item><title>throwOnMultipleResults</title><link>https://yosql.projects.metio.wtf/configuration/repositories/throwonmultipleresults/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/throwonmultipleresults/</guid><description>Throw an exception in case a statement using ReturningMode.SINGLE produces more than 1 result.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>throwOnMultipleResults</title><link>https://yosql.projects.metio.wtf/configuration/sql/throwonmultipleresults/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/throwonmultipleresults/</guid><description>Throw an exception in case a statement using ReturningMode.SINGLE produces more than 1 result.
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>type</title><link>https://yosql.projects.metio.wtf/configuration/sql/type/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/type/</guid><description>The type of the SQL statement.
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>useFinalClasses</title><link>https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/usefinalclasses/</guid><description>Controls whether classes are declared as final in generated code.
Configuration Options Option: &amp;rsquo;true' The default value of the useFinalClasses configuration option is true which enables the use of final for classes.
Option: &amp;lsquo;false&amp;rsquo; Changing the useFinalClasses configuration option to false disables the use of final for classes.
Related Options apiVersion: Controls the Java SDK API version to use in generated code. useFinalFields: Controls whether fields are declared as final in generated code.</description></item><item><title>useFinalFields</title><link>https://yosql.projects.metio.wtf/configuration/java/usefinalfields/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/usefinalfields/</guid><description>Controls whether fields are declared as final in generated code.
Configuration Options Option: &amp;rsquo;true' The default value of the useFinalFields configuration option is true which enables the use of final for fields.
Option: &amp;lsquo;false&amp;rsquo; Changing the useFinalFields configuration option to false disables the use of final for fields.
Related Options apiVersion: Controls the Java SDK API version to use in generated code. useFinalClasses: Controls whether classes are declared as final in generated code.</description></item><item><title>useFinalMethods</title><link>https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/usefinalmethods/</guid><description>Controls whether methods are declared as final in generated code.
Configuration Options Option: &amp;rsquo;true' The default value of the useFinalMethods configuration option is true which enables the use of final for methods.
Option: &amp;lsquo;false&amp;rsquo; Changing the useFinalMethods configuration option to false disables the use of final for methods.
Related Options apiVersion: Controls the Java SDK API version to use in generated code. useFinalClasses: Controls whether classes are declared as final in generated code.</description></item><item><title>useFinalParameters</title><link>https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/usefinalparameters/</guid><description>Controls whether parameters are declared as final in generated code.
Configuration Options Option: &amp;rsquo;true' The default value of the useFinalParameters configuration option is true which enables the use of final for parameters.
Option: &amp;lsquo;false&amp;rsquo; Changing the useFinalParameters configuration option to false disables the use of final for parameters.
Related Options apiVersion: Controls the Java SDK API version to use in generated code. useFinalClasses: Controls whether classes are declared as final in generated code.</description></item><item><title>useFinalVariables</title><link>https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/usefinalvariables/</guid><description>Controls whether variables are declared as final in generated code.
Configuration Options Option: &amp;rsquo;true' The default value of the useFinalVariables configuration option is true which enables the use of final for variables.
Option: &amp;lsquo;false&amp;rsquo; Changing the useFinalVariables configuration option to false disables the use of final for variables.
Related Options apiVersion: Controls the Java SDK API version to use in generated code. useFinalClasses: Controls whether classes are declared as final in generated code.</description></item><item><title>useSealedInterfaces</title><link>https://yosql.projects.metio.wtf/configuration/java/usesealedinterfaces/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/usesealedinterfaces/</guid><description>Controls whether interfaces should be sealed
Configuration Options Option: &amp;lsquo;false&amp;rsquo; The default value of the useSealedInterfaces configuration option is false which disables sealing interfaces in generated code.
Option: &amp;rsquo;true' Changing the useSealedInterfaces configuration option to true enables sealing interfaces in generated code.
Related Options apiVersion: Controls the Java SDK API version to use in generated code. useFinalClasses: Controls whether classes are declared as final in generated code. useFinalFields: Controls whether fields are declared as final in generated code.</description></item><item><title>useTextBlocks</title><link>https://yosql.projects.metio.wtf/configuration/java/usetextblocks/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/usetextblocks/</guid><description>Controls the usage of text blocks in generated code.
Configuration Options Option: &amp;rsquo;true' The default value of the useTextBlocks configuration option is true which enables the use of text blocks in generated code.
Option: &amp;lsquo;false&amp;rsquo; Changing the useTextBlocks configuration option to false disables the use of text blocks in generated code.
Related Options apiVersion: Controls the Java SDK API version to use in generated code. useFinalClasses: Controls whether classes are declared as final in generated code.</description></item><item><title>useVar</title><link>https://yosql.projects.metio.wtf/configuration/java/usevar/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/java/usevar/</guid><description>Controls the usage of the &amp;lsquo;var&amp;rsquo; keyword in generated code.
Configuration Options Option: &amp;rsquo;true&amp;rsquo; The default value of the useVar configuration option is true which enables the use of var in generated code.
Option: &amp;lsquo;false&amp;rsquo; Changing the useVar configuration option to false disables the use of var in generated code.
Related Options apiVersion: Controls the Java SDK API version to use in generated code. useFinalClasses: Controls whether classes are declared as final in generated code.</description></item><item><title>validateMethodNamePrefixes</title><link>https://yosql.projects.metio.wtf/configuration/repositories/validatemethodnameprefixes/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/validatemethodnameprefixes/</guid><description>Validate user given names against list of allowed prefixes per type.
Configuration Options Option: &amp;lsquo;false&amp;rsquo; The default value of the validateMethodNamePrefixes configuration option is false which disables the validation of names according to your configured prefixes.
Option: &amp;rsquo;true' Changing the validateMethodNamePrefixes configuration option to true enables the validation of method names.
Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database.</description></item><item><title>vendor</title><link>https://yosql.projects.metio.wtf/configuration/sql/vendor/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/vendor/</guid><description>The vendor name of the database the SQL statement is intended for
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>writesReturnUpdateCount</title><link>https://yosql.projects.metio.wtf/configuration/repositories/writesreturnupdatecount/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/writesreturnupdatecount/</guid><description>Writing method which are using ReturningMode.NONE return the number of affected rows instead.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>writesReturnUpdateCount</title><link>https://yosql.projects.metio.wtf/configuration/sql/writesreturnupdatecount/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/sql/writesreturnupdatecount/</guid><description>Writing method which are using ReturningMode.NONE return the number of affected rows instead.
Configuration Options Related Options annotations: The additional annotations to be placed on generated methods. catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection. description: The description for the SQL statement executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item></channel></rss>