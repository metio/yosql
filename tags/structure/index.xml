<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>structure on YoSQL</title><link>https://yosql.projects.metio.wtf/tags/structure/</link><description>Recent content in structure on YoSQL</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 16 Jun 2019 18:33:06 +0200</lastBuildDate><atom:link href="https://yosql.projects.metio.wtf/tags/structure/index.xml" rel="self" type="application/rss+xml"/><item><title>Structure</title><link>https://yosql.projects.metio.wtf/sql/structure/</link><pubDate>Sun, 16 Jun 2019 18:33:06 +0200</pubDate><guid>https://yosql.projects.metio.wtf/sql/structure/</guid><description>In order to call your SQL statement, a Java class must be created that contains methods for each of your statements. YoSQL will try to detect which repository your SQL statements will end up in. Based on the inputBaseDirectory configuration option, your project structure could look like this:
&amp;lt;inputBaseDirectory&amp;gt;/ └── user/ └── getAllUsers.sql Based on the above example, YoSQL will determine that you want a method called getAllUsers in a repository called UserRepository.</description></item></channel></rss>