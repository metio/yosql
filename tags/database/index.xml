<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>database on YoSQL</title><link>https://yosql.projects.metio.wtf/tags/database/</link><description>Recent content in database on YoSQL</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 16 Jun 2019 18:51:48 +0200</lastBuildDate><atom:link href="https://yosql.projects.metio.wtf/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>Database Access</title><link>https://yosql.projects.metio.wtf/benchmarks/db-access/</link><pubDate>Sun, 16 Jun 2019 18:51:48 +0200</pubDate><guid>https://yosql.projects.metio.wtf/benchmarks/db-access/</guid><description>The following benchmarks try to use the fastest code paths available to execute SQL statements.
Common Scenarios The common scenarios define what each persistence solution must solve in order to pass the TCK. All benchmarks run through the following benchmarks:
Reading Data readComplexRelationship: Read a complex data relationship. readManyToOneRelation: Reads the one part of a many-to-one relation. readMultipleEntities: Read multiple entities in one go. readMultipleEntitiesBasedOnCondition: Read multiple entities and filter them inside the database.</description></item></channel></rss>