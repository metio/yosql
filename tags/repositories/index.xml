<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>repositories on YoSQL</title><link>https://yosql.projects.metio.wtf/tags/repositories/</link><description>Recent content in repositories on YoSQL</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 14 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://yosql.projects.metio.wtf/tags/repositories/index.xml" rel="self" type="application/rss+xml"/><item><title>allowedCallPrefixes</title><link>https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/allowedcallprefixes/</guid><description>Configures which name prefixes are allowed for statements that are calling stored procedures.
Configuration Options Option: &amp;lsquo;call, execute, evaluate, eval&amp;rsquo; The default value of the allowedCallPrefixes configuration option is call, execute, evaluate, eval to allow several commonly used names for calling procedures.
Option: &amp;lsquo;do&amp;rsquo; Changing the allowedCallPrefixes configuration option to do only allows names with the prefix do to call stored procedures.
Related Options allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database.</description></item><item><title>allowedReadPrefixes</title><link>https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/allowedreadprefixes/</guid><description>Configures which name prefixes are allowed for statements that are reading data from your database.
Configuration Options Option: &amp;lsquo;read, select, find, query, lookup, get&amp;rsquo; The default value of the allowedReadPrefixes configuration option is read, select, find, query, lookup, get to allow several commonly used names for reading statements.
Option: &amp;rsquo;lego' Changing the allowedReadPrefixes configuration option to lego only allows names with the prefix lego to read data.
Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures.</description></item><item><title>allowedWritePrefixes</title><link>https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/allowedwriteprefixes/</guid><description>Configures which name prefixes are allowed for statements that are writing data to your database.
Configuration Options Option: &amp;lsquo;update, insert, delete, create, write, add, remove, merge, drop&amp;rsquo; The default value of the allowedWritePrefixes configuration option is update, insert, delete, create, write, add, remove, merge, drop to allow several commonly used names for writing statements.
Option: &amp;lsquo;scribo&amp;rsquo; Changing the allowedWritePrefixes configuration option to scribo only allows names with the prefix scribo to write data.</description></item><item><title>basePackageName</title><link>https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/basepackagename/</guid><description>The base package name for all repositories
Configuration Options Option: &amp;lsquo;com.example.persistence&amp;rsquo; The default value of the basePackageName configuration option is com.example.persistence. Setting the option to com.example.persistence therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:
package com.example.persistence; public class SomeRepository { // ... rest of generated code } Option: &amp;lsquo;your.own.domain&amp;rsquo; Changing the basePackageName configuration option to your.own.domain generates the following code instead:</description></item><item><title>catchAndRethrow</title><link>https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/catchandrethrow/</guid><description>Catch exceptions during SQL execution and re-throw them as RuntimeExceptions
Configuration Options Option: &amp;rsquo;true' The default value for catchAndRethrow is true. This will catch any SQLException that happen during SQL execution and re-throw them as RuntimeExceptions.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;false&amp;rsquo; In case you want to handle SQLExceptions yourself, set catchAndRethrow to false.</description></item><item><title>createConnection</title><link>https://yosql.projects.metio.wtf/configuration/repositories/createconnection/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/createconnection/</guid><description>Controls whether the generated code should create/open connection itself or use a given connection.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions executeBatch: Generate methods that are executed as batch executeBatchPrefix: The method prefix to use for generated methods that execute in a batch.</description></item><item><title>executeBatch</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executebatch/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executebatch/</guid><description>Generate methods that are executed as batch
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>executeBatchPrefix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executebatchprefix/</guid><description>The method prefix to use for generated methods that execute in a batch.
Configuration Options Option: '' The default value for executeBatchPrefix is the empty string. It does not add any prefix in front of batch methods.
package com.example.persistence; public class SomeRepository { public void writeSomeBatch() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;myPrefix&amp;rsquo; In case you want to prefix batch methods with something, set the executeBatchPrefix option.</description></item><item><title>executeBatchSuffix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executebatchsuffix/</guid><description>The method suffix to use for generated methods that execute in a batch.
Configuration Options Option: &amp;lsquo;Batch&amp;rsquo; The default value for executeBatchSuffix is &amp;lsquo;Batch&amp;rsquo;. It adds the word &amp;lsquo;Batch&amp;rsquo; after each batch method.
package com.example.persistence; public class SomeRepository { public void writeSomeBatch() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;Other&amp;rsquo; In case you want to suffix batch methods with something else, set the executeBatchSuffix option.</description></item><item><title>executeOnce</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executeonce/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executeonce/</guid><description>Generate methods that are executed once with the given parameters
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>executeOncePrefix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executeonceprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executeonceprefix/</guid><description>The method prefix to use for generated methods that execute once.
Configuration Options Option: '' The default value for executeOncePrefix is the empty string. It does not add any prefix in front of methods that are executed once.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;myPrefix&amp;rsquo; In case you want to prefix methods that execute once with something, set the executeOncePrefix option.</description></item><item><title>executeOnceSuffix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/executeoncesuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/executeoncesuffix/</guid><description>The method suffix to use for generated methods that execute once.
Configuration Options Option: '' The default value for executeOnceSuffix is the empty string. It does not add any suffix after methods that execute once.
package com.example.persistence; public class SomeRepository { public void writeSome() { // ... some code } // ... rest of generated code } Option: &amp;lsquo;mySuffix&amp;rsquo; In case you want to suffix methods that execute once with something, set the executeOnceSuffix option.</description></item><item><title>generateInterfaces</title><link>https://yosql.projects.metio.wtf/configuration/repositories/generateinterfaces/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/generateinterfaces/</guid><description>Generate interfaces for all repositories
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>injectConverters</title><link>https://yosql.projects.metio.wtf/configuration/repositories/injectconverters/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/injectconverters/</guid><description>Toggles whether converters should be injected as constructor parameters.
Configuration Options Option: &amp;lsquo;false&amp;rsquo; The default value of the injectConverters configuration option is false. It produces code similar to this:
package com.example.persistence; public class SomeRepository { private final DataSource dataSource; private final ToMapConverter toMap; public SomeRepository(final DataSource dataSource) { this.dataSource = dataSource; this.toMap = new ToMapConverter(); } // ... rest of generated code } Option: &amp;rsquo;true' Changing the injectConverters configuration option to true generates the following code instead:</description></item><item><title>Repositories</title><link>https://yosql.projects.metio.wtf/configuration/repositories/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/</guid><description>The repositories configuration can be used to control how YoSQL outputs repositories.</description></item><item><title>repositoryInterfacePrefix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfaceprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfaceprefix/</guid><description>The repository interface name prefix to use.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>repositoryInterfaceSuffix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfacesuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/repositoryinterfacesuffix/</guid><description>The repository interface name suffix to use.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>repositoryNamePrefix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/repositorynameprefix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/repositorynameprefix/</guid><description>The repository name prefix to use.
In case the repository name already contains the configured prefix, it will not be added twice.
Configuration Options Option: '' The default value of the repositoryNamePrefix configuration option is the empty string. Setting the option to `` therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:
package com.example.persistence; public class SomeRepository { // .</description></item><item><title>repositoryNameSuffix</title><link>https://yosql.projects.metio.wtf/configuration/repositories/repositorynamesuffix/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/repositorynamesuffix/</guid><description>The repository name suffix to use.
In case the repository name already contains the configured suffix, it will not be added twice.
Configuration Options Option: &amp;lsquo;Repository&amp;rsquo; The default value of the repositoryNameSuffix configuration option is Repository. Setting the option to Repository therefore produces the same code generated as the default configuration without any configuration option set. It produces code similar to this:
package com.example.persistence; public class SomeRepository { // ... rest of generated code } Option: &amp;lsquo;Repo&amp;rsquo; Changing the repositoryNameSuffix configuration option to Repo generates the following code instead:</description></item><item><title>throwOnMultipleResults</title><link>https://yosql.projects.metio.wtf/configuration/repositories/throwonmultipleresults/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/throwonmultipleresults/</guid><description>Throw an exception in case a statement using ReturningMode.SINGLE produces more than 1 result.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>validateMethodNamePrefixes</title><link>https://yosql.projects.metio.wtf/configuration/repositories/validatemethodnameprefixes/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/validatemethodnameprefixes/</guid><description>Validate user given names against list of allowed prefixes per type.
Configuration Options Option: &amp;lsquo;false&amp;rsquo; The default value of the validateMethodNamePrefixes configuration option is false which disables the validation of names according to your configured prefixes.
Option: &amp;rsquo;true' Changing the validateMethodNamePrefixes configuration option to true enables the validation of method names.
Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database.</description></item><item><title>writesReturnUpdateCount</title><link>https://yosql.projects.metio.wtf/configuration/repositories/writesreturnupdatecount/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://yosql.projects.metio.wtf/configuration/repositories/writesreturnupdatecount/</guid><description>Writing method which are using ReturningMode.NONE return the number of affected rows instead.
Configuration Options Related Options allowedCallPrefixes: Configures which name prefixes are allowed for statements that are calling stored procedures. allowedReadPrefixes: Configures which name prefixes are allowed for statements that are reading data from your database. allowedWritePrefixes: Configures which name prefixes are allowed for statements that are writing data to your database. basePackageName: The base package name for all repositories catchAndRethrow: Catch exceptions during SQL execution and re-throw them as RuntimeExceptions createConnection: Controls whether the generated code should create/open connection itself or use a given connection.</description></item><item><title>Structure</title><link>https://yosql.projects.metio.wtf/sql/structure/</link><pubDate>Sun, 16 Jun 2019 18:33:06 +0200</pubDate><guid>https://yosql.projects.metio.wtf/sql/structure/</guid><description>In order to call your SQL statement, a Java class must be created that contains methods for each of your statements. YoSQL will try to detect which repository your SQL statements will end up in. Based on the inputBaseDirectory configuration option, your project structure could look like this:
&amp;lt;inputBaseDirectory&amp;gt;/ └── user/ └── getAllUsers.sql Based on the above example, YoSQL will determine that you want a method called getAllUsers in a repository called UserRepository.</description></item></channel></rss>